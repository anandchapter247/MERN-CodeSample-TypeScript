{"version":3,"sources":["actions/Login.ts","actions/ProfileInfo.ts","actions/ChangePassword.ts","actions/Organization.ts","actions/EmailTemplate.ts","actions/Report.ts","actions/ProxyLogin.ts","actions/CMS.ts","actions/index.ts","config/AppRoutes.ts","config/AppConfig.ts","Helper/SweetAlert.ts","Helper/index.ts","Helper/ApiHelper.ts","states/Login.ts","reducers/Login.ts","reducers/ProfileInfo.ts","states/Profile.ts","reducers/ChangePassword.ts","states/ChangePassword.ts","reducers/Organization.ts","states/Organization.ts","reducers/EmailTemplate.ts","states/EmailTemplate.ts","reducers/ProxyLogin.ts","reducers/CMS.ts","states/CMS.ts","reducers/index.ts","logic/Login.ts","logic/ProfileInfo.ts","logic/ChangePassword.ts","logic/Organization.ts","logic/EmailTemplate.ts","logic/index.ts","App.tsx","store/index.ts","serviceWorker.ts","index.tsx","config/ApiRoutes.ts","config/Constant.ts","config/index.ts","Helper/ErrorHandlerHelper.ts","Helper/SuccessHandlerHelper.ts"],"names":["LoginActionTypes","ProfileActionTypes","LoginRequest","createAction","LOGIN_REQUEST","LoginSuccess","LOGIN_SUCCESS","LoginFailed","LOGIN_FAILURE","LogOutRequest","LOGOUT_REQUEST","ChangePasswordActionTypes","profileInfoRequest","PROFILE_INFO_REQUEST","profileInfoSuccess","PROFILE_INFO_SUCCESS","profileInfoFailed","PROFILE_INFO_FAILED","profileupdateRequest","PROFILE_UPDATE_REQUEST","profileupdateSuccess","PROFILE_UPDATE_SUCCESS","profileupdateFailed","PROFILE_UPDATE_FAILED","OrganizationActionTypes","changePasswordRequest","CHANGE_PASSWORD_REQUEST","changePasswordSuccess","CHANGE_PASSWORD_SUCCESS","changePasswordFailed","CHANGE_PASSWORD_FAILED","TemplateActionTypes","getOrganizationRequest","GET_ORGANIZATION_REQUEST","getOrganizationSuccess","GET_ORGANIZATION_SUCCESS","getOrganizationFailed","GET_ORGANIZATION_FAILED","ReportActionTypes","getTemplateRequest","GET_TEMPLATE_REQUEST","getTemplateSuccess","GET_TEMPLATE_SUCCESS","getTemplateFailed","GET_TEMPLATE_FAILURE","addTemplateRequest","ADD_TEMPLATE_REQUEST","addTemplateSuccess","ADD_TEMPLATE_SUCCESS","addTemplateFailed","ADD_TEMPLATE_FAILURE","updateTemplateSuccess","UPDATE_TEMPLATE_REQUEST","UPDATE_TEMPLATE_SUCCESS","updateTemplateFailed","UPDATE_TEMPLATE_FAILURE","viewTemplateRequest","VIEW_TEMPLATE_REQUEST","viewTemplateSuccess","VIEW_TEMPLATE_SUCCESS","VIEW_TEMPLATE_FAILED","ProxyLoginActionTypes","EXPORT_STDUENT_REPORT_REQUEST","HomePageActionTypes","proxyLoginRequest","PROXY_LOGIN_REQUEST","PROXY_LOGIN_SUCCESS","PROXY_LOGIN_FAILURE","viewHomePageRequest","VIEW_HOMEPAGE_REQUEST","updateHomePageRequest","VIEW_HOMEPAGE_SUCCESS","VIEW_HOMEPAGE_FAILURE","UPDATE_HOMEPAGE_REQUEST","UPDATE_HOMEPAGE_SUCCESS","UPDATE_HOMEPAGE_FAILURE","__webpack_require__","d","__webpack_exports__","redirectTo","showLoader","hideLoader","AppRoutes","MAIN","LOGIN","HOME","MY_PROFILE","ORGANIZATION","EMAILTEMPLATE","ADD_TEMPLATE","EDIT_TEMPLATE","ADD_HOME_PAGE","API_ENDPOINT","ImageURL","ENVEnum","process","ConfirmBox","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","obj","_obj","title","text","type","confirmButtonColor","cancelButtonColor","confirmButtonText","wrap","_context","prev","next","Swal","fire","showCancelButton","abrupt","sent","stop","_x","apply","this","arguments","ApiHelper","_this","_var_www_html_MERN_CodeSample_TypeScript_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_portalGateway","_apiVersion","setHost","host","setApiVersion","version","UploadImage","_var_www_html_MERN_CodeSample_TypeScript_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_var_www_html_MERN_CodeSample_TypeScript_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","service","endpoint","body","jsonData","fd","k","element","x","url","options","storageSession","response","data","errorHelper","_args","length","undefined","FormData","hasOwnProperty","indexOf","append","JSON","stringify","concat","method","headers","localStorage","getItem","Authorization","Axios","post","status","code","SuccessHandlerHelper","t0","isCancel","ErrorHandlerHelper","error","_x2","_x3","_var_www_html_MERN_CodeSample_TypeScript_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__","key","value","_FetchFromServer","_callee2","authenticated","queryOptions","responseType","queryParams","_args2","_context2","Content-Type","keys","map","push","join","_objectSpread","console","log","_x4","_x5","_x6","LoginInitialState","isLoading","isLoggedIn","loginReducer","handleActions","_handleActions","defineProperty","state","userData","payload","profileInfoReducer","ProfileInfo_handleActions","action","ProfileInfo_objectSpread","profileInfo","isError","firstName","lastName","email","_id","changePasswordReducer","ChangePassword_handleActions","ChangePassword_objectSpread","organizationReducer","Organization_handleActions","Organization_objectSpread","organizationData","templateReducer","EmailTemplate_handleActions","EmailTemplate_objectSpread","templateData","templateInfo","proxyLoginReducer","ProxyLogin_handleActions","ProxyLogin_objectSpread","homePageReducer","CMS_handleActions","CMS_objectSpread","homePageInfo","homePageData","mainSection","howItWorks","ourStory","why","totalRecords","mainReducer","SHOW_LOADER","HIDE_LOADER","RootReducer","combineReducers","OrganizationReducer","TemplateReducer","ProxyLoginReducer","toastId","LoginLogics","createLogic","_process","dispatch","done","FetchFromServer","ApiRoutes","ADMIN_LOGIN","authenticate","toast","isActive","success","messages","setItem","token","_process2","removeItem","path","ProfileInfoLogics","_response$data$data","ADMIN_PROFILE","ADMIN_PROFILE_UPDATE","ChangePasswordLogics","dismiss","ADMIN_CHANGE_PASSWORD","getOrganizationLogics","GET_ORGANIZATION","TemplateLogics","UPDATE_TEMPLATE","_process3","_callee3","_context3","GET_TEMPLATE","_x7","_x8","_x9","_process4","_callee4","_context4","VIEW_TEMPLATE","_x10","_x11","_x12","redirectToLogic","AllLogics","toConsumableArray","AppRoutesComponent","React","lazy","e","then","bind","history","createBrowserHistory","store","initialState","logicMiddleware","createLogicMiddleware","middlewares","routerMiddleware","middleware","applyMiddleware","createStore","configureStore","App","react_default","createElement","Fragment","es","react_router","react","fallback","react_toastify","autoClose","hideProgressBar","pauseOnFocusLoss","pauseOnHover","transition","Slide","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","ADMIN_PROXY_LOGIN","ADD_ORGANIZATION","EXPORT_REPORT","VIEW_HOME_PAGE","UPDATE_HOME_PAGE","AcceptedImageFormat","err","_var_www_html_MERN_CodeSample_TypeScript_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","rawError","timestamp","Date","now","setError","message","rawData","setSucccess","i"],"mappings":"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","file":"static/js/main.398bcdf8.chunk.js","sourcesContent":["import { createAction } from 'redux-actions';\nimport { ILoginActionData } from '../interfaces';\n\nexport enum LoginActionTypes {\n  LOGIN_REQUEST = 'Request login user!',\n  LOGIN_SUCCESS = 'Login Successfully!',\n  LOGIN_FAILURE = 'Login Failed',\n  LOGOUT_REQUEST = 'Logout Started!',\n}\nexport const LoginRequest = createAction<ILoginActionData>(\n  LoginActionTypes.LOGIN_REQUEST,\n);\n\nexport const LoginSuccess = createAction(LoginActionTypes.LOGIN_SUCCESS);\nexport const LoginFailed = createAction(LoginActionTypes.LOGIN_FAILURE);\n\nexport const LogOutRequest = createAction(LoginActionTypes.LOGOUT_REQUEST);\n","import { createAction } from 'redux-actions';\n\nexport enum ProfileActionTypes {\n  PROFILE_INFO_REQUEST = 'ProfileInfo Requested!',\n  PROFILE_INFO_SUCCESS = 'ProfileInfo successfully!',\n  PROFILE_INFO_FAILED = 'ProfileInfo failed!',\n  PROFILE_UPDATE_REQUEST = 'Request Profile updation',\n  PROFILE_UPDATE_SUCCESS = 'Profile updated successfully',\n  PROFILE_UPDATE_FAILED = 'Profile updation failed!',\n}\nexport const profileInfoRequest = createAction(\n  ProfileActionTypes.PROFILE_INFO_REQUEST,\n);\nexport const profileInfoSuccess = createAction(\n  ProfileActionTypes.PROFILE_INFO_SUCCESS,\n);\nexport const profileInfoFailed = createAction(\n  ProfileActionTypes.PROFILE_INFO_FAILED,\n);\nexport const profileupdateRequest = createAction(\n  ProfileActionTypes.PROFILE_UPDATE_REQUEST,\n);\nexport const profileupdateSuccess = createAction(\n  ProfileActionTypes.PROFILE_UPDATE_SUCCESS,\n);\nexport const profileupdateFailed = createAction(\n  ProfileActionTypes.PROFILE_UPDATE_FAILED,\n);\n","import { createAction } from 'redux-actions';\n\nexport enum ChangePasswordActionTypes {\n  CHANGE_PASSWORD_REQUEST = 'Change password Requested!',\n  CHANGE_PASSWORD_SUCCESS = 'Change password successfully!',\n  CHANGE_PASSWORD_FAILED = 'Change password failed!',\n}\nexport const changePasswordRequest = createAction(\n  ChangePasswordActionTypes.CHANGE_PASSWORD_REQUEST,\n);\nexport const changePasswordSuccess = createAction(\n  ChangePasswordActionTypes.CHANGE_PASSWORD_SUCCESS,\n);\nexport const changePasswordFailed = createAction(\n  ChangePasswordActionTypes.CHANGE_PASSWORD_FAILED,\n);\n","import { createAction } from 'redux-actions';\n\nexport enum OrganizationActionTypes {\n  GET_ORGANIZATION_REQUEST = 'Organization Requested!',\n  GET_ORGANIZATION_SUCCESS = 'Organization data fetch successfully!',\n  GET_ORGANIZATION_FAILED = 'Organization request failed!',\n}\nexport const getOrganizationRequest = createAction(\n  OrganizationActionTypes.GET_ORGANIZATION_REQUEST,\n);\nexport const getOrganizationSuccess = createAction(\n  OrganizationActionTypes.GET_ORGANIZATION_SUCCESS,\n);\nexport const getOrganizationFailed = createAction(\n  OrganizationActionTypes.GET_ORGANIZATION_FAILED,\n);\n","import { createAction } from 'redux-actions';\n\nexport enum TemplateActionTypes {\n  GET_TEMPLATE_REQUEST = 'Request for TEMPLATEs data',\n  GET_TEMPLATE_SUCCESS = 'get TEMPLATEs successfully',\n  GET_TEMPLATE_FAILURE = 'get TEMPLATEs failed',\n  VIEW_TEMPLATE_REQUEST = 'VIEW TEMPLATE Requested!',\n  VIEW_TEMPLATE_SUCCESS = 'VIEW TEMPLATE successfully!',\n  VIEW_TEMPLATE_FAILED = 'VIEW TEMPLATE failed!',\n  ADD_TEMPLATE_REQUEST = 'Request to add template',\n  ADD_TEMPLATE_SUCCESS = 'Template added successfully!',\n  ADD_TEMPLATE_FAILURE = 'Failed to add template',\n  UPDATE_TEMPLATE_REQUEST = 'Request to UPDATE template',\n  UPDATE_TEMPLATE_SUCCESS = 'Template updated successfully!',\n  UPDATE_TEMPLATE_FAILURE = 'Failed to UPDATE template',\n}\n\n// Get Template list\nexport const getTemplateRequest = createAction(\n  TemplateActionTypes.GET_TEMPLATE_REQUEST,\n);\nexport const getTemplateSuccess = createAction(\n  TemplateActionTypes.GET_TEMPLATE_SUCCESS,\n);\nexport const getTemplateFailed = createAction(\n  TemplateActionTypes.GET_TEMPLATE_FAILURE,\n);\n\n// Add template\nexport const addTemplateRequest = createAction(\n  TemplateActionTypes.ADD_TEMPLATE_REQUEST,\n);\nexport const addTemplateSuccess = createAction(\n  TemplateActionTypes.ADD_TEMPLATE_SUCCESS,\n);\nexport const addTemplateFailed = createAction(\n  TemplateActionTypes.ADD_TEMPLATE_FAILURE,\n);\n\n// Update template\nexport const updateTemplateRequest = createAction(\n  TemplateActionTypes.UPDATE_TEMPLATE_REQUEST,\n);\n\nexport const updateTemplateSuccess = createAction(\n  TemplateActionTypes.UPDATE_TEMPLATE_SUCCESS,\n);\nexport const updateTemplateFailed = createAction(\n  TemplateActionTypes.UPDATE_TEMPLATE_FAILURE,\n);\n\n// View template\nexport const viewTemplateRequest = createAction(\n  TemplateActionTypes.VIEW_TEMPLATE_REQUEST,\n);\nexport const viewTemplateSuccess = createAction(\n  TemplateActionTypes.VIEW_TEMPLATE_SUCCESS,\n);\nexport const viewTemplateFailed = createAction(\n  TemplateActionTypes.VIEW_TEMPLATE_FAILED,\n);\n","import { createAction } from 'redux-actions';\n\nexport enum ReportActionTypes {\n  EXPORT_STDUENT_REPORT_REQUEST = 'Request for export student reports',\n}\n\nexport const exportReportRequest = createAction(\n  ReportActionTypes.EXPORT_STDUENT_REPORT_REQUEST,\n);","import { createAction } from 'redux-actions';\nimport { IProxyLoginActionData } from '../interfaces';\n\nexport enum ProxyLoginActionTypes {\n  PROXY_LOGIN_REQUEST = 'Request PROXY_login organization!',\n  PROXY_LOGIN_SUCCESS = 'PROXY_Login Successfully!',\n  PROXY_LOGIN_FAILURE = 'Login Failed',\n}\nexport const proxyLoginRequest = createAction<IProxyLoginActionData>(\n  ProxyLoginActionTypes.PROXY_LOGIN_REQUEST,\n);\n\nexport const proxyLoginSuccess = createAction(\n  ProxyLoginActionTypes.PROXY_LOGIN_SUCCESS,\n);\nexport const proxyLoginFailed = createAction(\n  ProxyLoginActionTypes.PROXY_LOGIN_FAILURE,\n);\n","import { createAction } from 'redux-actions';\n\nexport enum HomePageActionTypes {\n  VIEW_HOMEPAGE_REQUEST = 'Request for HomePage VIEW',\n  VIEW_HOMEPAGE_SUCCESS = 'HomePage VIEW successfully',\n  VIEW_HOMEPAGE_FAILURE = 'HomePage view failed',\n  UPDATE_HOMEPAGE_REQUEST = 'Request for HomePage updation',\n  UPDATE_HOMEPAGE_SUCCESS = 'Update HomePage successfully',\n  UPDATE_HOMEPAGE_FAILURE = 'Update HomePage failed',\n}\n\n// View HomePage\nexport const viewHomePageRequest = createAction(\n  HomePageActionTypes.VIEW_HOMEPAGE_REQUEST,\n);\nexport const viewHomePageSuccess = createAction(\n  HomePageActionTypes.VIEW_HOMEPAGE_SUCCESS,\n);\nexport const viewHomePageFailed = createAction(\n  HomePageActionTypes.VIEW_HOMEPAGE_FAILURE,\n);\n\n\n// Update HomePage\nexport const updateHomePageRequest = createAction(\n  HomePageActionTypes.UPDATE_HOMEPAGE_REQUEST,\n);\nexport const updateHomePageSuccess = createAction(\n  HomePageActionTypes.UPDATE_HOMEPAGE_SUCCESS,\n);\nexport const updateHomePageFailed = createAction(\n  HomePageActionTypes.UPDATE_HOMEPAGE_FAILURE,\n);\n\n\n\n\n","import { createAction } from 'redux-actions';\n\nexport * from './Login';\nexport * from './ProfileInfo';\nexport * from './ChangePassword';\nexport * from './Organization';\nexport * from './EmailTemplate';\nexport * from './Report';\nexport * from './ProxyLogin';\nexport * from './CMS';\n\n//\nexport const redirectTo = createAction('REDIRET_TO');\n//\nexport const showLoader = createAction('SHOW_LOADER');\nexport const hideLoader = createAction('HIDE_LOADER');\n","import { IAppRoutes } from '../interfaces/AppRoutes';\n\nexport const AppRoutes: IAppRoutes = {\n  MAIN: '/',\n  LOGIN: '/login',\n  HOME: '/dashboard',\n  MY_PROFILE: '/my-profile',\n  ORGANIZATION: '/organization',\n  EMAILTEMPLATE: '/email-template',\n  ADD_TEMPLATE: '/email-template/add',\n  EDIT_TEMPLATE: '/email-template/add/:id',\n    //Home Page\n    ADD_HOME_PAGE: '/homepage'\n};\n","export const ENVEnum: any = {\n  DEVELOPMENT: 'development',\n  PRODUCTION: 'production',\n};\n\nexport const Environment: string = process.env.NODE_ENV || ENVEnum.DEVELOPMENT;\nexport const API_ENDPOINT: string =\n  Environment !== ENVEnum.DEVELOPMENT\n    ? 'http://192.168.2.138:8080/api/v1'\n    : 'http://api.drpolly.com/v1';\n\nexport const ImageURL: string =\n  Environment !== ENVEnum.DEVELOPMENT\n    ? 'http://192.168.2.138:8000'\n    : 'http://images.drpolly.com';","import Swal from \"sweetalert2\"\n\nexport const ConfirmBox = async (obj: object | any) => {\n  if (!obj) {\n    obj = {}\n  }\n  let { title, text, type, confirmButtonColor, cancelButtonColor, confirmButtonText } = obj\n  return await Swal.fire({\n    title: title || 'Are you sure?',\n    text: text || \"You want to be able to revert this!\",\n    type: type || 'warning',\n    showCancelButton: true,\n    confirmButtonColor: confirmButtonColor || '#3085d6',\n    cancelButtonColor: cancelButtonColor || '#d33',\n    confirmButtonText: confirmButtonText || 'Yes!'\n  })\n}\n","export * from './ApiHelper';\nexport * from './SuccessHandlerHelper';\nexport * from './ErrorHandlerHelper';\nexport * from './Logger';\nexport * from './SweetAlert';","import Axios, { AxiosRequestConfig, AxiosResponse, Method } from 'axios';\nimport { API_ENDPOINT } from '../config/AppConfig';\nimport { ErrorHandlerHelper } from './ErrorHandlerHelper';\nimport { SuccessHandlerHelper } from './SuccessHandlerHelper';\n\n/**\n * ApiHelper Class - For making Api Requests\n */\nexport class ApiHelper {\n  _portalGateway: string;\n  _apiVersion: string;\n\n  constructor() {\n    this._portalGateway = API_ENDPOINT;\n    this._apiVersion = '';\n  }\n  setHost = (host: string) => {\n    this._portalGateway = host;\n  };\n  setApiVersion = (version: string) => {\n    this._apiVersion = version;\n  };\n  /**\n   * Fetches from the Gateway defined by the instantiated object. Accepts <T> as output object.\n   * @example <caption>\"/Auth/UserAccount\", \"/GetCurrentUser\", \"GET\", \"JWT Content\"</caption>\n   * @param {service} service - wanting to be access ex. \"UserAuth/Auth\"\n   * @param {endpoint} endpoint - you wish to call ex. \"/Login\"\n   * @param {method} mehotd - method (GET, UPDATE, DELETE, POST)\n   * @param {jwt} JWT - JSON Web Token (Optional)\n   * @param {queryOptions} Query - query options for \"GET\" methods (Optional)\n   * @param {body} body - JSON body for \"UPDATE, DELETE and POST\" methods (Optional)\n   */\n  async FetchFromServer(\n    service: string,\n    endpoint: string,\n    method: Method,\n    authenticated: boolean = false,\n    queryOptions?: string,\n    body?: any,\n    responseType?:any\n  ) {\n    let options: AxiosRequestConfig = { method: method };\n    let url: string = this._apiVersion + service + endpoint;\n    options.headers = { 'Content-Type': 'application/json' };\n    if (responseType === 'blob') {\n      options.responseType = 'blob';\n    }\n    if (authenticated) {\n      const storageSession = localStorage.getItem('token');\n      options.headers.Authorization = storageSession;\n    }\n    // html query for \"GET\", json body for others.\n    if (queryOptions && typeof queryOptions === 'object') {\n      let queryParams = [] as string[];\n      Object.keys(queryOptions).map(key => {\n        queryParams.push(`${key}=${(queryOptions as any)[key]}`);\n        return key;\n      });\n      url += `?${queryParams.join('&')}`;\n    }\n\n    if (body) {\n      options.data = body;\n    }\n    try {\n      let response: AxiosResponse<any> = await Axios({\n        ...options,\n        url: `${this._portalGateway}${url}`,\n      });\n\n      if (response.status < 200 || response.status >= 300) {\n        let errorObject: any = {\n          code: response.status,\n          response: response.data,\n        };\n\n        throw errorObject;\n      }\n      const data: SuccessHandlerHelper = new SuccessHandlerHelper(\n        response.data,\n      );\n      return data.data;\n    } catch (err) {\n      if (Axios.isCancel(err)) {\n        console.log('%s Req Cancelled', err);\n      }\n      const errorHelper: ErrorHandlerHelper = new ErrorHandlerHelper(\n        err.response,\n      );\n      return errorHelper.error;\n    }\n  }\n\n  // Function to upload file in form data\n  UploadImage = async (service: string, endpoint: string, body: any, jsonData: string[] = []) => {\n    let fd = new FormData();\n\n    for (const k in body) {\n      if (body.hasOwnProperty(k)) {\n        const element = body[k];\n        if (\n          k === 'characteristic' ||\n          k === 'audio' ||\n          k === 'video' ||\n          k === 'removedAttachments' ||\n          k === 'courseId' ||\n          k === 'moduleId' ||\n          k === 'organizationId' ||\n          k === 'text' ||\n          jsonData.indexOf(k) > -1\n        ) {\n          fd.append(k, JSON.stringify(element));\n        } else if (k === 'lessonAttachments') {\n          for (var x = 0; x < element.length; x++) {\n            fd.append('lessonAttachments[]', element[x]);\n          }\n        } else if (k === 'whySectionImage') {\n          for (var x = 0; x < element.length; x++) {\n            //if (typeof element[x] !== \"string\") {\n            fd.append(`whySectionImage[${x}]`, element[x]);\n            //}\n          }\n        }\n        else {\n          fd.append(k, element);\n        }\n      }\n    }\n    let url: string = this._apiVersion + service + endpoint;\n    let options: AxiosRequestConfig = { method: 'POST' };\n    options.headers = {};\n    const storageSession = localStorage.getItem('token');\n    options.headers.Authorization = storageSession;\n\n    try {\n      let response: AxiosResponse<any> = await Axios.post(\n        `${this._portalGateway}${url}`,\n        fd,\n        {\n          headers: options.headers,\n        },\n      );\n\n      if (response.status < 200 || response.status >= 300) {\n        let errorObject: any = {\n          code: response.status,\n          response: response.data,\n        };\n\n        throw errorObject;\n      }\n      const data: SuccessHandlerHelper = new SuccessHandlerHelper(\n        response.data,\n      );\n      return data.data;\n    } catch (err) {\n      if (Axios.isCancel(err)) {\n      }\n      const errorHelper: ErrorHandlerHelper = new ErrorHandlerHelper(\n        err.response,\n      );\n      return errorHelper.error;\n    }\n  };\n}\n\n\n","import { ILoginModal } from '../interfaces';\n\nexport const LoginInitialState: ILoginModal = {\n  isLoading: true,\n  isLoggedIn: false,\n};\n","import { LoginInitialState } from './../states';\nimport { handleActions } from 'redux-actions';\nimport { ILoginModal } from '../interfaces';\nimport { LoginActionTypes } from '../actions';\n\nexport const loginReducer = handleActions<ILoginModal, any>(\n  {\n    [LoginActionTypes.LOGIN_REQUEST]: (\n      state = LoginInitialState,\n      action,\n    ): ILoginModal => ({\n      ...state,\n      isLoading: true,\n      isLoggedIn: false,\n    }),\n    [LoginActionTypes.LOGIN_SUCCESS]: (\n      state = LoginInitialState,\n      action,\n    ): ILoginModal => ({\n      ...state,\n      isLoading: false,\n      isLoggedIn: true,\n      userData: action.payload.userData,\n    }),\n    [LoginActionTypes.LOGIN_FAILURE]: (\n      state = LoginInitialState,\n      action,\n    ): ILoginModal => ({\n      ...state,\n      isLoading: false,\n      isLoggedIn: false,\n      error: action.payload.error,\n    }),\n  },\n  LoginInitialState,\n);\n","import { handleActions } from 'redux-actions';\nimport { ProfileActionTypes } from './../actions';\nimport { ProfileInitialState } from '../states';\nimport { IProfileModal } from '../interfaces/Profile';\n\nexport const profileInfoReducer = handleActions<IProfileModal, any>(\n  {\n    [ProfileActionTypes.PROFILE_INFO_REQUEST]: (state, action) => ({\n      ...state,\n      isLoading: true,\n    }),\n    [ProfileActionTypes.PROFILE_INFO_SUCCESS]: (state, action) => ({\n      ...state,\n      profileInfo: action.payload.profileInfo,\n      isLoading: false,\n    }),\n    [ProfileActionTypes.PROFILE_INFO_FAILED]: (state, action) => ({\n      ...state,\n      profileInfo: action.payload.profileInfo,\n      isLoading: false,\n      isError: true,\n    }),\n    [ProfileActionTypes.PROFILE_UPDATE_REQUEST]: (state, action) => ({\n      ...state,\n      isError: false,\n    }),\n    [ProfileActionTypes.PROFILE_UPDATE_SUCCESS]: (state, action) => ({\n      ...state,\n      profileInfo: action.payload.profileInfo,\n      isError: false,\n    }),\n    [ProfileActionTypes.PROFILE_UPDATE_FAILED]: (state, action) => ({\n      ...state,\n      isError: true,\n    }),\n  },\n  ProfileInitialState,\n);\n","import { IProfileModal } from '../interfaces';\n\nexport const ProfileInitialState: IProfileModal = {\n  isLoading: true,\n  profileInfo: {\n    firstName: '',\n    lastName: '',\n    email: '',\n    _id: '',\n  },\n  isError: false,\n};\n","import { handleActions } from 'redux-actions';\nimport { ChangePasswordActionTypes } from './../actions';\nimport { ChangePasswordInitialstates } from '../states';\nimport { IChangePasswordModal } from '../interfaces/Profile';\n\nexport const changePasswordReducer = handleActions<IChangePasswordModal, any>(\n  {\n    [ChangePasswordActionTypes.CHANGE_PASSWORD_REQUEST]: (state, action) => ({\n      ...state,\n      isLoading: true,\n    }),\n    [ChangePasswordActionTypes.CHANGE_PASSWORD_SUCCESS]: (state, action) => ({\n      ...state,\n      isError: false,\n      isLoading: false,\n    }),\n    [ChangePasswordActionTypes.CHANGE_PASSWORD_FAILED]: (state, action) => ({\n      ...state,\n      isLoading: false,\n      isError: true,\n    }),\n  },\n  ChangePasswordInitialstates,\n);\n","import { IChangePasswordModal } from '../interfaces';\n\nexport const ChangePasswordInitialstates: IChangePasswordModal = {\n  isLoading: false,\n  isError: false,\n};\n","import { handleActions } from 'redux-actions';\nimport { OrganizationActionTypes } from './../actions';\nimport { OrganizationInitialState } from '../states';\nimport { IOrganizationModel } from '../interfaces/Organization';\n\nexport const organizationReducer = handleActions<IOrganizationModel, any>(\n  {\n    [OrganizationActionTypes.GET_ORGANIZATION_REQUEST]: (state, action) => ({\n      ...state,\n      isLoading: true,\n    }),\n    [OrganizationActionTypes.GET_ORGANIZATION_SUCCESS]: (state, action) => ({\n      ...state,\n      organizationData: action.payload.organizationData,\n      isLoading: false,\n    }),\n    [OrganizationActionTypes.GET_ORGANIZATION_FAILED]: (state, action) => ({\n      ...state,\n      isLoading: false,\n      isError: true,\n    }),\n  },\n  OrganizationInitialState,\n);\n","import { IOrganizationModel } from '../interfaces/Organization';\n\nexport const OrganizationInitialState: IOrganizationModel = {\n  isLoading: true,\n  organizationData: [],\n  isError: false,\n};\n","import { handleActions } from 'redux-actions';\nimport { TemplateActionTypes } from '../actions';\nimport { TemplateInitialState } from '../states';\n\nexport const templateReducer = handleActions<any, any>(\n  {\n    [TemplateActionTypes.GET_TEMPLATE_REQUEST]: (state, action) => ({\n      ...state,\n      isLoading: true,\n    }),\n    [TemplateActionTypes.GET_TEMPLATE_SUCCESS]: (state, action) => ({\n      ...state,\n      templateData: action.payload.templateData,\n      isLoading: false,\n    }),\n    [TemplateActionTypes.GET_TEMPLATE_FAILURE]: (state, action) => ({\n      ...state,\n      isLoading: false,\n      isError: true,\n    }),\n    [TemplateActionTypes.ADD_TEMPLATE_REQUEST]: (state, action) => ({\n      ...state,\n      isLoading: true,\n    }),\n    [TemplateActionTypes.ADD_TEMPLATE_SUCCESS]: (state, action) => ({\n      ...state,\n      templateInfo: action.payload.templateInfo,\n      isLoading: false,\n    }),\n    [TemplateActionTypes.ADD_TEMPLATE_FAILURE]: (state, action) => ({\n      ...state,\n      isLoading: false,\n      isError: true,\n    }),\n    [TemplateActionTypes.UPDATE_TEMPLATE_REQUEST]: (state, action) => ({\n      ...state,\n      isError: false,\n    }),\n    [TemplateActionTypes.UPDATE_TEMPLATE_SUCCESS]: (state, action) => ({\n      ...state,\n      templateInfo: action.payload.templateInfo,\n      isError: false,\n    }),\n    [TemplateActionTypes.UPDATE_TEMPLATE_FAILURE]: (state, action) => ({\n      ...state,\n      isError: true,\n    }),\n    [TemplateActionTypes.VIEW_TEMPLATE_REQUEST]: (state, action) => ({\n      ...state,\n      isLoading: true,\n    }),\n    [TemplateActionTypes.VIEW_TEMPLATE_SUCCESS]: (state, action) => ({\n      ...state,\n      templateInfo: action.payload.templateInfo,\n      isLoading: false,\n    }),\n    [TemplateActionTypes.VIEW_TEMPLATE_FAILED]: (state, action) => ({\n      ...state,\n      isLoading: false,\n      isError: true,\n    }),\n  },\n  TemplateInitialState,\n);\n","import { ITemplateModal } from '../interfaces';\n\nexport const TemplateInitialState: ITemplateModal = {\n  isLoading: true,\n  isError: false,\n  templateData: [],\n  templateInfo: '',\n};\n","import { LoginInitialState } from './../states';\nimport { handleActions } from 'redux-actions';\nimport { ILoginModal } from '../interfaces';\nimport { ProxyLoginActionTypes } from '../actions';\n\nexport const proxyLoginReducer = handleActions<ILoginModal, any>(\n  {\n    [ProxyLoginActionTypes.PROXY_LOGIN_REQUEST]: (\n      state = LoginInitialState,\n      action,\n    ): ILoginModal => ({\n      ...state,\n      isLoading: true,\n      isLoggedIn: false,\n    }),\n    [ProxyLoginActionTypes.PROXY_LOGIN_SUCCESS]: (\n      state = LoginInitialState,\n      action,\n    ): ILoginModal => ({\n      ...state,\n      isLoading: false,\n      isLoggedIn: true,\n    }),\n    [ProxyLoginActionTypes.PROXY_LOGIN_FAILURE]: (\n      state = LoginInitialState,\n      action,\n    ): ILoginModal => ({\n      ...state,\n      isLoading: false,\n      isLoggedIn: false,\n      error: action.payload.error,\n    }),\n  },\n  LoginInitialState,\n);\n","import { handleActions } from 'redux-actions';\nimport { HomePageActionTypes } from '../actions';\nimport { IHomePageModel } from '../interfaces';\nimport { HomePageInitialState } from '../states';\n\nexport const homePageReducer = handleActions<IHomePageModel, any>(\n  {\n    [HomePageActionTypes.VIEW_HOMEPAGE_REQUEST]: (state, action) => ({\n      ...state,\n      isLoading: true,\n    }),\n    [HomePageActionTypes.VIEW_HOMEPAGE_SUCCESS]: (state, action) => ({\n      ...state,\n      homePageInfo: action.payload.homePageInfo,\n      isLoading: false,\n    }),\n    [HomePageActionTypes.VIEW_HOMEPAGE_FAILURE]: (state, action) => ({\n      ...state,\n      isLoading: false,\n      isError: true,\n    }),\n    [HomePageActionTypes.UPDATE_HOMEPAGE_REQUEST]: (state, action) => ({\n      ...state,\n    }),\n    [HomePageActionTypes.UPDATE_HOMEPAGE_SUCCESS]: (state, action) => ({\n      ...state,\n      homePageInfo: action.payload.homePageData,\n    }),\n    [HomePageActionTypes.UPDATE_HOMEPAGE_FAILURE]: (state, action) => ({\n      ...state,\n      isError: true,\n    }),\n  },\n  HomePageInitialState,\n);\n","import { IHomePageModel } from '../interfaces';\n\nexport const HomePageInitialState: IHomePageModel = {\n  isLoading: true,\n  homePageData: [],\n  homePageInfo: {\n    mainSection: {},\n    howItWorks: {},\n    ourStory: {},\n    why: {}\n  },\n  totalRecords: 0,\n  isError: false,\n};\n","import { IRootState } from './../interfaces';\nimport { Reducer, AnyAction, combineReducers } from 'redux';\nimport { loginReducer } from './Login';\nimport { handleActions } from 'redux-actions';\nimport { profileInfoReducer } from './ProfileInfo';\nimport { changePasswordReducer } from './ChangePassword';\nimport { organizationReducer } from './Organization';\nimport { templateReducer } from './EmailTemplate';\nimport { proxyLoginReducer } from './ProxyLogin';\nimport { homePageReducer } from './CMS';\n\nexport const mainReducer = handleActions(\n  {\n    SHOW_LOADER: () => ({\n      showLoader: true,\n    }),\n    HIDE_LOADER: () => ({\n      showLoader: false,\n    }),\n  },\n  {\n    showLoader: false,\n  },\n);\n\nexport const RootReducer: Reducer<IRootState, AnyAction> = combineReducers<\n  IRootState\n>({\n  mainReducer: mainReducer as any,\n  loginReducer: loginReducer as any,\n  profileInfoReducer: profileInfoReducer as any,\n  changePasswordReducer: changePasswordReducer as any,\n  OrganizationReducer: organizationReducer as any,\n  TemplateReducer: templateReducer as any,\n  ProxyLoginReducer: proxyLoginReducer as any,\n  homePageReducer: homePageReducer as any,\n});\n","import { createLogic } from 'redux-logic';\nimport { push } from 'react-router-redux';\nimport { toast } from 'react-toastify';\nimport {\n  LoginActionTypes,\n  LoginSuccess,\n  LoginFailed,\n  redirectTo,\n  showLoader,\n  hideLoader,\n} from '../actions';\nimport { ApiRoutes, AppRoutes } from '../config';\nimport { ApiHelper } from '../Helper';\n/**\n *\n */\n\nlet toastId: any = null;\n\nconst loginLogic = createLogic({\n  type: LoginActionTypes.LOGIN_REQUEST,\n  async process(data, dispatch: any, done) {\n    console.log('dffffffffffffffffffffff');\n    const action: any = data.action;\n    console.log(action);\n    console.log(action.payload);\n    dispatch(showLoader());\n    const response = await new ApiHelper().FetchFromServer(\n      ApiRoutes.ADMIN_LOGIN.service,\n      ApiRoutes.ADMIN_LOGIN.url,\n      ApiRoutes.ADMIN_LOGIN.method,\n      ApiRoutes.ADMIN_LOGIN.authenticate,\n      undefined,\n      action.payload,\n    );\n    console.log(response);\n    if (response && !response.isError) {\n      console.log('dfdsfdfds');\n      dispatch(hideLoader());\n      if (!toast.isActive(toastId)) {\n        toastId = toast.success(response.messages[0]);\n      }\n      localStorage.setItem('token', response.data.token);\n      dispatch(\n        LoginSuccess({\n          userData: response.data.data,\n        }),\n      );\n      dispatch(push('/dashboard'));\n      done();\n    } else {\n      dispatch(hideLoader());\n      console.log(response);\n      if (!toast.isActive(toastId)) {\n        console.log('fffffffffff');\n        toastId = toast.error(response.messages[0]);\n      }\n      dispatch(\n        LoginFailed({\n          error: response.messages[0],\n        }),\n      );\n      done();\n    }\n  },\n});\n\nconst logOutLogic = createLogic({\n  type: LoginActionTypes.LOGOUT_REQUEST,\n  async process({ action }, dispatch: any, done) {\n    localStorage.removeItem('token');\n    dispatch(redirectTo({ path: AppRoutes.LOGIN }));\n    done();\n  },\n});\n\nexport const LoginLogics = [loginLogic, logOutLogic];\n","import { createLogic } from 'redux-logic';\nimport { toast } from 'react-toastify';\nimport {\n  ProfileActionTypes,\n  profileInfoSuccess,\n  profileInfoFailed,\n  redirectTo,\n  profileupdateSuccess,\n  profileupdateFailed,\n  showLoader,\n  hideLoader,\n} from '../actions';\nimport { ApiHelper } from '../Helper/ApiHelper';\nimport { ApiRoutes, AppRoutes } from '../config';\n\nlet toastId: any = null;\n\nconst profileInfoLogic = createLogic({\n  type: ProfileActionTypes.PROFILE_INFO_REQUEST,\n  async process(data, dispatch: any, done) {\n    console.log('******************');\n    const response = await new ApiHelper().FetchFromServer(\n      ApiRoutes.ADMIN_PROFILE.service,\n      ApiRoutes.ADMIN_PROFILE.url,\n      ApiRoutes.ADMIN_PROFILE.method,\n      ApiRoutes.ADMIN_PROFILE.authenticate,\n      undefined,\n      undefined,\n    );\n    console.log(response);\n    if (response && !response.isError) {\n      console.log('dfdsfdfds');\n      const { firstName, lastName, email, _id } = response.data.data;\n      dispatch(\n        profileInfoSuccess({\n          profileInfo: {\n            firstName,\n            lastName,\n            email,\n            _id,\n          },\n        }),\n      );\n      done();\n    } else {\n      console.log(response);\n      if (!toast.isActive(toastId)) {\n        toastId = toast.error(response.messages[0]);\n      }\n      localStorage.removeItem('token');\n      dispatch(\n        profileInfoFailed({\n          error: response.messages[0],\n          isError: true,\n        }),\n      );\n      dispatch(redirectTo({ path: AppRoutes.LOGIN }));\n      done();\n    }\n  },\n});\n\nconst updateProfileLogic = createLogic({\n  type: ProfileActionTypes.PROFILE_UPDATE_REQUEST,\n  async process(data, dispatch: any, done) {\n    dispatch(showLoader());\n    const action: any = data.action;\n    console.log('******************');\n    const response = await new ApiHelper().FetchFromServer(\n      ApiRoutes.ADMIN_PROFILE_UPDATE.service,\n      ApiRoutes.ADMIN_PROFILE_UPDATE.url,\n      ApiRoutes.ADMIN_PROFILE_UPDATE.method,\n      ApiRoutes.ADMIN_PROFILE_UPDATE.authenticate,\n      undefined,\n      action.payload,\n    );\n    console.log(response);\n    if (response && !response.isError) {\n      console.log('dfdsfdfds');\n      dispatch(hideLoader());\n      if (!toast.isActive(toastId)) {\n        toastId = toast.success(response.messages[0]);\n      }\n      dispatch(\n        profileupdateSuccess({\n          profileInfo: action.payload,\n        }),\n      );\n      done();\n    } else {\n      console.log(response);\n      if (!toast.isActive(toastId)) {\n        toastId = toast.error(response.messages[0]);\n      }\n      dispatch(hideLoader());\n      dispatch(\n        profileupdateFailed({\n          error: response.messages[0],\n        }),\n      );\n      done();\n    }\n  },\n});\n\nexport const ProfileInfoLogics = [profileInfoLogic, updateProfileLogic];\n","import { createLogic } from 'redux-logic';\nimport { toast } from 'react-toastify';\nimport {\n  ChangePasswordActionTypes,\n  showLoader,\n  hideLoader,\n  changePasswordSuccess,\n  changePasswordFailed,\n} from '../actions';\nimport { ApiHelper } from '../Helper/ApiHelper';\nimport { ApiRoutes } from '../config';\n\nlet toastId: any = null;\n\nconst ChangePasswordLogic = createLogic({\n  type: ChangePasswordActionTypes.CHANGE_PASSWORD_REQUEST,\n  async process(data, dispatch: any, done) {\n    const action: any = data.action;\n    console.log('******************');\n    toast.dismiss();\n    dispatch(showLoader());\n    const response = await new ApiHelper().FetchFromServer(\n      ApiRoutes.ADMIN_CHANGE_PASSWORD.service,\n      ApiRoutes.ADMIN_CHANGE_PASSWORD.url,\n      ApiRoutes.ADMIN_CHANGE_PASSWORD.method,\n      ApiRoutes.ADMIN_CHANGE_PASSWORD.authenticate,\n      undefined,\n      action.payload,\n    );\n    console.log(response);\n    if (response && !response.isError) {\n      console.log('dfdsfdfds');\n      dispatch(hideLoader());\n      dispatch(changePasswordSuccess());\n      if (!toast.isActive(toastId)) {\n        toastId = toast.success(response.messages[0]);\n      }\n      done();\n    } else {\n      console.log(response);\n      dispatch(hideLoader());\n      if (!toast.isActive(toastId)) {\n        toastId = toast.error(response.messages[0]);\n      }\n      dispatch(\n        changePasswordFailed({\n          isError: true,\n        }),\n      );\n      done();\n    }\n  },\n});\n\nexport const ChangePasswordLogics = [ChangePasswordLogic];\n","import { createLogic } from 'redux-logic';\nimport { toast } from 'react-toastify';\nimport {\n  showLoader,\n  hideLoader,\n  OrganizationActionTypes,\n  getOrganizationFailed,\n  getOrganizationSuccess,\n} from '../actions';\nimport { ApiHelper } from '../Helper/ApiHelper';\nimport { ApiRoutes } from '../config';\n\nlet toastId: any = null;\n\nconst getOrganization = createLogic({\n  type: OrganizationActionTypes.GET_ORGANIZATION_REQUEST,\n  async process(data, dispatch: any, done) {\n    console.log('******************');\n    dispatch(showLoader());\n    const response = await new ApiHelper().FetchFromServer(\n      ApiRoutes.GET_ORGANIZATION.service,\n      ApiRoutes.GET_ORGANIZATION.url,\n      ApiRoutes.GET_ORGANIZATION.method,\n      ApiRoutes.GET_ORGANIZATION.authenticate,\n      undefined,\n      undefined,\n    );\n    console.log(response);\n    if (response && !response.isError) {\n      console.log('dfdsfdfds');\n      dispatch(hideLoader());\n      dispatch(\n        getOrganizationSuccess({\n          organizationData: response.data.data,\n        }),\n      );\n      done();\n    } else {\n      console.log(response);\n      if (!toast.isActive(toastId)) {\n        toastId = toast.error(response.messages[0]);\n      }\n      dispatch(hideLoader());\n      dispatch(getOrganizationFailed());\n      done();\n    }\n  },\n});\n\nexport const getOrganizationLogics = [getOrganization];\n","import { createLogic } from 'redux-logic';\nimport { toast } from 'react-toastify';\nimport {\n  showLoader,\n  hideLoader,\n  TemplateActionTypes,\n  addTemplateSuccess,\n  addTemplateFailed,\n  updateTemplateSuccess,\n  updateTemplateFailed,\n  viewTemplateSuccess,\n  getTemplateSuccess,\n  getTemplateFailed,\n} from '../actions';\nimport { ApiHelper } from '../Helper/ApiHelper';\nimport { ApiRoutes } from '../config';\n\nlet toastId: any = null;\n\nconst addTemplate = createLogic({\n  type: TemplateActionTypes.ADD_TEMPLATE_REQUEST,\n  async process(data, dispatch: any, done) {\n    console.log('******************');\n    const action: any = data.action;\n    dispatch(showLoader());\n    const response = await new ApiHelper().FetchFromServer(\n      ApiRoutes.ADD_TEMPLATE.service,\n      ApiRoutes.ADD_TEMPLATE.url,\n      ApiRoutes.ADD_TEMPLATE.method,\n      ApiRoutes.ADD_TEMPLATE.authenticate,\n      undefined,\n      action.payload,\n    );\n    console.log(response);\n    if (response && !response.isError) {\n      console.log('dfdsfdfds');\n      dispatch(hideLoader());\n      dispatch(\n        addTemplateSuccess({\n          templateInfo: response.data.data,\n        }),\n      );\n      done();\n    } else {\n      console.log(response);\n      if (!toast.isActive(toastId)) {\n        toastId = toast.error(response.messages[0]);\n      }\n      dispatch(hideLoader());\n      dispatch(addTemplateFailed());\n      done();\n    }\n  },\n});\n\nconst updateTemplate = createLogic({\n  type: TemplateActionTypes.UPDATE_TEMPLATE_REQUEST,\n  async process(data, dispatch: any, done) {\n    console.log('******************');\n    const action: any = data.action;\n    dispatch(showLoader());\n    const response = await new ApiHelper().FetchFromServer(\n      ApiRoutes.UPDATE_TEMPLATE.service,\n      ApiRoutes.UPDATE_TEMPLATE.url,\n      ApiRoutes.UPDATE_TEMPLATE.method,\n      ApiRoutes.UPDATE_TEMPLATE.authenticate,\n      undefined,\n      action.payload,\n    );\n    console.log(response);\n    if (response && !response.isError) {\n      console.log('dfdsfdfds');\n      dispatch(hideLoader());\n      dispatch(\n        updateTemplateSuccess({\n          templateInfo: response.data.data,\n        }),\n      );\n      done();\n    } else {\n      console.log(response);\n      if (!toast.isActive(toastId)) {\n        toastId = toast.error(response.messages[0]);\n      }\n      dispatch(hideLoader());\n      dispatch(updateTemplateFailed());\n      done();\n    }\n  },\n});\n\nconst getTemplates = createLogic({\n  type: TemplateActionTypes.GET_TEMPLATE_REQUEST,\n  async process(data, dispatch: any, done) {\n    console.log('******************');\n    const action: any = data.action;\n    dispatch(showLoader());\n    const response = await new ApiHelper().FetchFromServer(\n      ApiRoutes.GET_TEMPLATE.service,\n      ApiRoutes.GET_TEMPLATE.url,\n      ApiRoutes.GET_TEMPLATE.method,\n      ApiRoutes.GET_TEMPLATE.authenticate,\n      undefined,\n      action.payload,\n    );\n    console.log(response);\n    if (response && !response.isError) {\n      console.log('dfdsfdfds');\n      dispatch(hideLoader());\n      dispatch(\n        getTemplateSuccess({\n          templateData: response.data.data,\n        }),\n      );\n      done();\n    } else {\n      console.log(response);\n      if (!toast.isActive(toastId)) {\n        toastId = toast.error(response.messages[0]);\n      }\n      dispatch(hideLoader());\n      dispatch(getTemplateFailed());\n      done();\n    }\n  },\n});\n\nconst viewTemplate = createLogic({\n  type: TemplateActionTypes.VIEW_TEMPLATE_REQUEST,\n  async process(data, dispatch: any, done) {\n    console.log('******************');\n    const action: any = data.action;\n    dispatch(showLoader());\n    const response = await new ApiHelper().FetchFromServer(\n      ApiRoutes.VIEW_TEMPLATE.service,\n      ApiRoutes.VIEW_TEMPLATE.url,\n      ApiRoutes.VIEW_TEMPLATE.method,\n      ApiRoutes.VIEW_TEMPLATE.authenticate,\n      action.payload,\n      undefined,\n    );\n    console.log(response);\n    if (response && !response.isError) {\n      console.log('dfdsfdfds');\n      dispatch(hideLoader());\n      dispatch(\n        viewTemplateSuccess({\n          templateInfo: response.data.data,\n        }),\n      );\n      done();\n    } else {\n      console.log(response);\n      if (!toast.isActive(toastId)) {\n        toastId = toast.error(response.messages[0]);\n      }\n      dispatch(hideLoader());\n      dispatch(viewTemplateSuccess());\n      done();\n    }\n  },\n});\n\nexport const TemplateLogics = [\n  addTemplate,\n  updateTemplate,\n  getTemplates,\n  viewTemplate,\n];\n","import { Logic, createLogic } from 'redux-logic';\nimport { push } from 'react-router-redux';\nimport { LoginLogics } from './Login';\nimport { ProfileInfoLogics } from './ProfileInfo';\nimport { ChangePasswordLogics } from './ChangePassword';\nimport { getOrganizationLogics } from './Organization';\nimport { TemplateLogics } from './EmailTemplate';\n\nexport const redirectToLogic = createLogic({\n  type: 'REDIRET_TO',\n  async process(data, dispatch: any, done) {\n    const action: any = data.action;\n    dispatch(push(action.payload.path));\n    done();\n  },\n});\n\nexport const AllLogics: Logic[] = [\n  ...LoginLogics,\n  ...ProfileInfoLogics,\n  ...ChangePasswordLogics,\n  ...getOrganizationLogics,\n  ...TemplateLogics,\n  redirectToLogic,\n];\n","import React, { Suspense } from 'react';\nimport './App.scss';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { Store } from 'redux';\nimport { Router } from 'react-router';\nimport configureStore from './store';\nimport { ToastContainer, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nconst AppRoutesComponent = React.lazy(() => import('./routes'));\n\nconst history = createBrowserHistory();\nconst store: Store = configureStore(history);\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Provider store={store}>\n        <Router history={history}>\n          <Suspense fallback={'Loading..'}>\n            <AppRoutesComponent />\n          </Suspense>\n        </Router>\n        <ToastContainer autoClose={8000}\n          hideProgressBar\n          pauseOnFocusLoss={false}\n          pauseOnHover={false}\n          transition={Slide} />\n      </Provider>\n    </>\n  );\n};\n\nexport default App;\n","import { Store, createStore, applyMiddleware, Action, Middleware } from 'redux';\nimport { routerMiddleware } from 'react-router-redux';\nimport { History } from 'history';\nimport { IRootState } from '../interfaces';\nimport logger from 'redux-logger';\nimport { RootReducer } from '../reducers';\nimport { createLogicMiddleware } from 'redux-logic';\nimport { AllLogics } from '../logic';\n\nexport default function configureStore(\n  history: History,\n  initialState?: IRootState,\n): Store<IRootState> {\n  const logicMiddleware: Middleware = createLogicMiddleware(AllLogics);\n  const middlewares: Middleware[] = [\n    routerMiddleware(history),\n    logicMiddleware,\n  ];\n  const isProd: boolean = process.env.NODE_ENV === 'production';\n  if (!isProd) {\n    middlewares.push(logger);\n  }\n\n  const middleware: any = applyMiddleware(...middlewares);\n\n  const store: Store<any, Action> = createStore(\n    RootReducer as any,\n    initialState as any,\n    middleware,\n  ) as Store<IRootState>;\n\n  return store;\n}\nexport function omit<T extends object, K extends keyof T>(\n  target: T,\n  ...omitKeys: K[]\n): Omit<T, K> {\n  return (Object.keys(target) as K[]).reduce(\n    (res: any, key) => {\n      if (!omitKeys.includes(key)) {\n        res[key] = target[key];\n      }\n      return res;\n    },\n    {} as Omit<T, K>,\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { IApiRoutes } from '../interfaces';\n\nexport const ApiRoutes: IApiRoutes = {\n  ADMIN_LOGIN: {\n    service: '/auth',\n    url: '/login',\n    method: 'POST',\n    authenticate: false,\n  },\n  ADMIN_PROFILE: {\n    service: '/auth',\n    url: '/details',\n    method: 'GET',\n    authenticate: true,\n  },\n  ADMIN_PROFILE_UPDATE: {\n    service: '/auth',\n    url: '/update',\n    method: 'PUT',\n    authenticate: true,\n  },\n  ADMIN_CHANGE_PASSWORD: {\n    service: '/auth',\n    url: '/change-password',\n    method: 'PUT',\n    authenticate: true,\n  },\n  // Proxy Login\n  ADMIN_PROXY_LOGIN: {\n    service: '/auth',\n    url: '/admin-proxy-login',\n    method: 'POST',\n    authenticate: true,\n  },\n\n  // Oragnization Module related APIs\n  GET_ORGANIZATION: {\n    service: '/organization',\n    url: '/get-organization',\n    method: 'GET',\n    authenticate: true,\n  },\n  ADD_ORGANIZATION: {\n    service: '/organization',\n    url: '/add-organization',\n    method: 'POST',\n    authenticate: true,\n  },\n\n  // Email Template\n  ADD_TEMPLATE: {\n    service: '/email-templates',\n    url: '/add',\n    method: 'POST',\n    authenticate: true,\n  },\n  UPDATE_TEMPLATE: {\n    service: '/email-templates',\n    url: '/update',\n    method: 'put',\n    authenticate: true,\n  },\n  GET_TEMPLATE: {\n    service: '/email-templates',\n    url: '/get',\n    method: 'get',\n    authenticate: true,\n  },\n  VIEW_TEMPLATE: {\n    service: '/email-templates',\n    url: '/view',\n    method: 'get',\n    authenticate: true,\n  },\n\n  EXPORT_REPORT: {\n    service: '/organization',\n    url: '/export-report',\n    method: 'GET',\n    authenticate: true,\n  },\n\n    // Home Page\n\n    ADD_HOME_PAGE: {\n      service: '/homepage',\n      url: '/add',\n      method: 'POST',\n      authenticate: true,\n    },\n    VIEW_HOME_PAGE: {\n      service: '/homepage',\n      url: '/view-homepage',\n      method: 'GET',\n      authenticate: true,\n    },\n    UPDATE_HOME_PAGE: {\n      service: '/homepage',\n      url: '/update-homepage',\n      method: 'PUT',\n      authenticate: true,\n    },\n};\n","export const AcceptedImageFormat = [\n    'image/jpg',\n    'image/png',\n    'image/jpeg',\n    'image/tiff',\n    'image/svg+xml',\n    'image/gif',\n  ];","export * from './ApiRoutes';\nexport * from './AppRoutes';\nexport * from './Constant';","import { IResponseHandlerModel } from './../interfaces/ResponseHandlerModel';\r\nimport { AxiosResponse } from 'axios';\r\n\r\n/**\r\n * ErrorHandlerHelper Class - For managing errors\r\n */\r\nexport class ErrorHandlerHelper {\r\n  private rawError: any;\r\n  public error: IResponseHandlerModel = {\r\n    code: 500,\r\n    isError: true,\r\n    timestamp: Date.now(),\r\n    error: 'Unknown error',\r\n    messages: [],\r\n    data: undefined,\r\n  };\r\n  constructor(err: AxiosResponse<any>) {\r\n    this.rawError = err;\r\n    this.setError();\r\n  }\r\n\r\n  private setError = () => {\r\n    this.error.code = this.rawError ? this.rawError.code : this.error.code;\r\n    this.error.timestamp = Date.now();\r\n    this.error.messages = [];\r\n    console.log(this.rawError);\r\n    console.log('this.rawError');\r\n    if (\r\n      this.rawError &&\r\n      this.rawError.data &&\r\n      typeof this.rawError.data === 'object'\r\n    ) {\r\n      this.error.messages.push(this.rawError.data.message);\r\n      this.error.data = this.rawError.data.data;\r\n    } else {\r\n      this.error.error = 'Unknown';\r\n      this.error.messages = ['An unexpected error occured.'];\r\n    }\r\n  };\r\n}\r\n","import { IResponseHandlerModel } from '../interfaces/ResponseHandlerModel';\r\nimport { AxiosResponse } from 'axios';\r\n\r\n/**\r\n * ErrorHandlerHelper Class - For managing errors\r\n */\r\nexport class SuccessHandlerHelper {\r\n  private rawData: any;\r\n  public data: IResponseHandlerModel = {\r\n    code: 200,\r\n    isError: false,\r\n    timestamp: Date.now(),\r\n    error: undefined,\r\n    messages: [],\r\n  };\r\n\r\n  constructor(data: AxiosResponse<any>) {\r\n    this.rawData = data;\r\n    this.setSucccess();\r\n  }\r\n\r\n  private setSucccess = () => {\r\n    const messages: any = [];\r\n\r\n    for (let i in this.rawData) {\r\n      if (typeof this.rawData[i] === 'string') {\r\n        messages.push(this.rawData[i]);\r\n      }\r\n    }\r\n    this.data.data = this.rawData;\r\n    this.data.messages = messages;\r\n  };\r\n}\r\n"],"sourceRoot":""}