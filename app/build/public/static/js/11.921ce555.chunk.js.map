{"version":3,"sources":["../node_modules/react-bootstrap/esm/CardGroup.js","app/containers/Auth/index.tsx"],"names":["CardGroup","Object","createWithBsPrefix","Login","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toastId","handleChange","event","_objectSpread3","_event$target","target","name","value","setState","_objectSpread","state","defineProperty","errors","handleSubmit","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","e","_this$state","email","password","data","_loginValidator","isValid","wrap","_context","prev","next","preventDefault","trim","toLowerCase","loginValidator","onLogin","abrupt","stop","_x","apply","arguments","console","log","localStorage","getItem","redirectTo","path","_this$state2","react_default","createElement","className","Container","Row","Col","md","Card","Body","Form","onSubmit","Group","InputGroup","Prepend","Text","id","type","placeholder","onChange","xs","Button","color","Component","connect","loginReducer","dispatch","LoginRequest"],"mappings":"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","file":"static/js/11.921ce555.chunk.js","sourcesContent":["import createWithBsPrefix from './utils/createWithBsPrefix';\nexport default createWithBsPrefix('card-group');","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport {\n  Button,\n  Card,\n  CardGroup,\n  Row,\n  Col,\n  Container,\n  Form,\n  InputGroup,\n} from 'react-bootstrap';\nimport {\n  ILoginState,\n  ILoginProps,\n  IRootState,\n  ILoginActionData,\n} from '../../../interfaces';\nimport { loginValidator } from '../../components/validator';\nimport { LoginRequest } from '../../../actions';\n\nclass Login extends Component<ILoginProps, ILoginState> {\n  toastId: any = null;\n  constructor(props: ILoginProps) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      errors: {\n        email: '',\n        password: '',\n      },\n    };\n  }\n  componentDidMount() {\n    console.log('did mount');\n    console.log(this.props);\n    if (localStorage.getItem('token') && this.props.redirectTo) {\n      console.log('ffffffffffffffffffff');\n      this.props.redirectTo({ path: '/dashboard' });\n    }\n  }\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    this.setState({\n      ...this.state,\n      [name]: value,\n      errors: {\n        ...this.state.errors,\n        [name]: '',\n      },\n    });\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    const data = {\n      email: email ? email.trim().toLowerCase() : '',\n      password,\n    };\n    // To validate form fields\n    const { isValid, errors } = loginValidator(data);\n    if (isValid) {\n      await this.props.onLogin(data);\n    } else {\n      this.setState({\n        errors,\n      });\n      return;\n    }\n  };\n\n  render() {\n    const { email, password, errors } = this.state;\n    return (\n      <div className='app flex-row align-items-center'>\n        <Container>\n          <Row className='justify-content-center'>\n            <Col md='5'>\n              <CardGroup>\n                <Card className='p-4'>\n                  <Card.Body>\n                    <Form onSubmit={this.handleSubmit}>\n                      <h1>Login</h1>\n                      <p className='text-muted'>Sign In to your account</p>\n                      <Form.Group>\n                        <InputGroup>\n                          <InputGroup.Prepend>\n                            <InputGroup.Text id='inputGroupPrepend'>\n                              <i className='icon-user' />\n                            </InputGroup.Text>\n                          </InputGroup.Prepend>\n                          <input\n                            type={'text'}\n                            name={'email'}\n                            value={email}\n                            className={'form-control'}\n                            placeholder={'Enter email'}\n                            onChange={this.handleChange}\n                          />\n                        </InputGroup>\n                        <div className={'text-danger'}>\n                          {errors && errors.email}\n                        </div>\n                      </Form.Group>\n                      <Form.Group>\n                        <InputGroup>\n                          <InputGroup.Prepend>\n                            <InputGroup.Text id='inputGroupPrepend'>\n                              <i className='icon-lock' />\n                            </InputGroup.Text>\n                          </InputGroup.Prepend>\n                          <input\n                            type={'password'}\n                            name={'password'}\n                            value={password}\n                            className={'form-control'}\n                            placeholder={'Enter Password'}\n                            onChange={this.handleChange}\n                          />\n                        </InputGroup>\n                        <div className={'text-danger'}>\n                          {errors && errors.password}\n                        </div>\n                      </Form.Group>\n                      <Row>\n                        <Col xs='6'>\n                          <Button\n                            type={'submit'}\n                            color='primary'\n                            className='px-4'\n                          >\n                            Login\n                          </Button>\n                        </Col>\n                        {/* <Col xs=\"6\" className=\"text-right\">\n                          <Button color=\"link\" className=\"px-0\">\n                            Forgot password?\n                          </Button>\n                        </Col> */}\n                      </Row>\n                    </Form>\n                  </Card.Body>\n                </Card>\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps: any = (state: IRootState) => ({\n  loginReducer: state.loginReducer,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    onLogin: (data: ILoginActionData) => {\n      dispatch(LoginRequest(data));\n    },\n  };\n};\n/**\n *\n */\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Login);\n"],"sourceRoot":""}