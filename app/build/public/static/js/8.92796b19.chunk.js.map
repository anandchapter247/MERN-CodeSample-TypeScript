{"version":3,"sources":["app/common/messages.ts","app/components/validator/Login.ts","app/components/validator/ChangePassword.ts","app/components/validator/CMS.ts","app/components/validator/index.ts","assets/img/default_image.jpg","app/components/ToolTipComponent/index.tsx","app/common/TooltipText.ts","app/containers/Organization/index.tsx","app/containers/EmailTemplates/AddTemplate.tsx","app/containers/EmailTemplates/index.tsx","app/containers/CMS/HomePage.tsx","routes/routes.ts","_nav.ts","app/components/Loader/Loader.tsx","app/containers/DefaultLayout/DefaultLayout.tsx"],"names":["__webpack_require__","d","__webpack_exports__","message","InvalidEmail","InvalidName","RequiredEmail","RequiredFirstName","RequiredLastName","RequiredCompany","RequiredPasscode","RequiredPassword","RequiredOldPassword","RequiredRePassword","InvalidPasswordLength","InvalidRePasswordLength","MinLengthPassword","PasswordMatchError","InvalidNameLength","RequiredConatctName","RequiredOfficeNumber","RequiredContactNumber","RequiredMobile","RequiredPhone","RequiredEmailBody","RequiredEmailSubject","MobileInvalid","PhoneInvalid","OfficeNoInvalid","RequiredCountry","RequiredAddress","RequiredCity","RequiredState","RequiredPostalCode","RequiredTimeZone","RequiredCard","RequiredCvv","RequiredExpireDate","Title","buttonText","content","image","VideoURL","loginValidator","data","_email","_email2","validations","email","Object","defineProperty","ValidationTypes","REQUIRED","EMAIL","password","messages","_Validator","Validator","isValid","errors","passwordValidator","_newPassword","_confirmPassword","_newPassword2","_confirmPassword2","oldPassword","newPassword","MINLENGTH","confirmPassword","EQUAL","HomePageValidator","mainSectionTitle","mainSectionContent","mainSectionButtonText","mainSectionImageUrl","ourStoryContent","ourStoryTitle","ourStoryVideoLink","Login_loginValidator","ChangePassword_passwordValidator","CMS_HomePageValidator","module","exports","p","TooltipComponent","props","dataPlacement","react_default","a","createElement","OverlayTrigger","key","placement","overlay","Tooltip","id","children","TooltipText","Organization","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","console","log","getOrganization","handleStatus","_ref","asyncToGenerator","regenerator_default","mark","_callee","isActive","_ref2","wrap","_context","prev","next","ConfirmBox","title","text","sent","value","abrupt","stop","_x","_x2","apply","arguments","state","totalRecords","currentPage","pageLimit","pageNeighbours","_this2","_this$state","count","Table","striped","bordered","hover","Form","Group","className","type","name","organizationReducer","organizationData","length","map","organization","index","_id","concat","firstName","lastName","wildCardDomain","Button","color","onClick","ToolTipComponent","proxyLogin","colSpan","Component","connect","OrganizationReducer","dispatch","getOrganizationRequest","proxyLoginRequest","AddTemplate","editor","params","match","setState","isEditable","viewTemplate","componentDidUpdate","prevProps","templateReducer","isLoading","templateInfo","templateName","subject","designContent","handleChange","event","_event$target","target","_objectSpread","handleSubmit","_callee2","e","_context2","preventDefault","exportHtml","design","html","templateData","htmlContent","addTemplate","onLoad","loadDesign","counters","u_column","u_row","u_content_text","body","rows","cells","columns","contents","values","containerPadding","_meta","htmlID","htmlClassNames","selectable","draggable","deletable","textAlign","lineHeight","backgroundColor","padding","border","columnsBackgroundColor","backgroundImage","url","fullWidth","repeat","center","cover","hideMobile","noStackMobile","contentWidth","fontFamily","label","_this$state2","onSubmit","Label","InputGroup","placeholder","onChange","react_email_editor_es","ref","Row","Col","xs","TemplateReducer","addTemplateRequest","viewTemplateRequest","EmailTemplates","getTemplates","location","search","Card","Header","variant","history","push","AppRoutes","ADD_TEMPLATE","Body","responsive","Fragment","template","EDIT_TEMPLATE","replace","getTemplateRequest","AddHomePage","viewHomePage","homePageReducer","homePageInfo","_homePageReducer$home","mainSection","howItWorks","ourStory","why","contentBlock","htmlToDraft","ourContentBlock","howContent","section","element","resp","howContentState","ContentState","createFromBlockArray","contentBlocks","HomePage_objectSpread","EditorState","createWithContent","contentState","mainSectioncontent","imageUrl","ourContentState","ourContent","whySection","forEach","howItWorkHandleChange","owrStoryHandleChange","_event$target2","videoLink","whyHandleChange","whyHandleContentChange","ind","onEditorStateChange","onHowEditorStateChange","onOurEditorStateChange","uploadImage","AcceptedImageFormat","indexOf","files","reader","FileReader","file","onloadend","result","readAsDataURL","uploadWhyImage","_HomePageValidator","draftToHtml","convertToRaw","getCurrentContent","mainSectionImage","howItWorksButtonText","howItWorksSection","sect","sec","assign","whySectionImage","updateHomePage","heading","searchValue","src","startsWith","ImageURL","defaultImage","htmlFor","accept","style","marginTop","react_draft_wysiwyg","editorState","wrapperClassName","editorClassName","toolbar","options","inline","inDropdown","link","linkCallback","viewHomePageRequest","updateHomePageRequest","Home","React","lazy","Promise","all","then","bind","Login","MyProfile","routes","path","MAIN","exact","HOME","component","LOGIN","MY_PROFILE","ORGANIZATION","EMAILTEMPLATE","ADD_HOME_PAGE","HomePage","_nav","items","icon","Loader","classNames","viewBox","cx","cy","r","fill","stroke","strokeWidth","DefaultFooter","DefaultHeader","DefaultLayout","pathname","profileInfoReducer","localStorage","getItem","profileInfo","isAuthenticated","userDetails","redirectTo","react_es","fixed","react","fallback","components_Loader_Loader","display","navConfig","navigation","isOpen","appRoutes","Container","fluid","react_router","route","idx","from","to","loginReducer","profileInfoRequest"],"mappings":"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","file":"static/js/8.92796b19.chunk.js","sourcesContent":["export const message = {\n  InvalidEmail: 'Please enter valid email address',\n  InvalidName: 'Name should contain only characters.',\n  RequiredEmail: 'Email address is required.',\n  RequiredFirstName: 'First Name is required.',\n  RequiredLastName: 'Last Name is required.',\n  RequiredCompany: 'Company name is required.',\n  RequiredPasscode: 'Passcode is required.',\n  RequiredPassword: 'Password is required.',\n  RequiredOldPassword: 'Old password is required',\n  RequiredRePassword: 'Confirm password is required.',\n  InvalidPasswordLength: 'Password should atleast 8 characters long.',\n  InvalidRePasswordLength: 'Confirm password should atleast 8 characters long.',\n  MinLengthPassword: 'Password should be at least 6 characters long.',\n  PasswordMatchError: \"Password and confirm password didn't match.\",\n  InvalidNameLength: 'Name fieid should contain atleast 2 letters',\n  RequiredConatctName: 'Contact name is required',\n  RequiredOfficeNumber: 'Office number is required',\n  RequiredContactNumber: 'Contact number is required',\n  RequiredMobile: 'Mobile number is required',\n  RequiredPhone: 'Phone number is required',\n  RequiredEmailBody: 'Please enter some text in email body',\n  RequiredEmailSubject: 'Please enter subject of the email',\n  MobileInvalid: 'Mobile number should contain atleast 10 digit',\n  PhoneInvalid: 'Phone number should contain atleast 10 digit',\n  OfficeNoInvalid: 'Office number should contain atleast 10 digit',\n  RequiredCountry: 'Please select country',\n  RequiredAddress: 'Address is required',\n  RequiredCity: 'City is required',\n  RequiredState: 'State is required',\n  RequiredPostalCode: 'Zip code is required',\n  RequiredTimeZone: 'Tiimezone is required',\n  RequiredCard: 'Please enter valid card number',\n  RequiredCvv: 'Please enter valid CVV',\n  RequiredExpireDate: 'Please enter valid expiration date',\n\n    //Home Page Section\n    Title: \"Please enter title\",\n    buttonText: \"Please enter button text\",\n    content: \"Please enter description\",\n    image: \"Please enter image\",\n    VideoURL: \"Please enter video url\"\n};\n","import Validator, { ValidationTypes } from 'js-object-validation';\nimport { message } from '../../common/messages';\n\nexport const loginValidator = (data: any) => {\n  const validations = {\n    email: {\n      [ValidationTypes.REQUIRED]: true,\n      [ValidationTypes.EMAIL]: true,\n    },\n    password: {\n      [ValidationTypes.REQUIRED]: true,\n    },\n  };\n  // Error messages\n  const messages = {\n    email: {\n      [ValidationTypes.EMAIL]: message.InvalidEmail,\n      [ValidationTypes.REQUIRED]: message.RequiredEmail,\n    },\n    password: {\n      [ValidationTypes.REQUIRED]: message.RequiredPassword,\n    },\n  };\n\n  const { isValid, errors } = Validator(data, validations, messages);\n  return {\n    isValid,\n    errors,\n  };\n};\n","import Validator, { ValidationTypes } from 'js-object-validation';\nimport { message } from '../../common/messages';\n\nexport const passwordValidator = (data: any) => {\n  const validations = {\n    oldPassword: {\n      [ValidationTypes.REQUIRED]: true,\n    },\n    newPassword: {\n      [ValidationTypes.REQUIRED]: true,\n      [ValidationTypes.MINLENGTH]: 6,\n    },\n    confirmPassword: {\n      [ValidationTypes.REQUIRED]: true,\n      [ValidationTypes.EQUAL]: 'newPassword',\n    },\n  };\n  // Error messages\n  const messages = {\n    oldPassword: {\n      [ValidationTypes.REQUIRED]: message.RequiredOldPassword,\n    },\n    newPassword: {\n      [ValidationTypes.REQUIRED]: message.RequiredPassword,\n      [ValidationTypes.MINLENGTH]: message.MinLengthPassword,\n    },\n    confirmPassword: {\n      [ValidationTypes.REQUIRED]: message.RequiredRePassword,\n      [ValidationTypes.EQUAL]: message.PasswordMatchError,\n    },\n  };\n\n  const { isValid, errors } = Validator(data, validations, messages);\n  return {\n    isValid,\n    errors,\n  };\n};\n","import Validator, { ValidationTypes } from 'js-object-validation';\nimport { message } from '../../common/messages';\n\nexport const HomePageValidator = (data: any) => {\n  const validations = {\n    mainSectionTitle: {\n      [ValidationTypes.REQUIRED]: true,\n    },\n    mainSectionContent: {\n      [ValidationTypes.REQUIRED]: true,\n    },\n    mainSectionButtonText: {\n      [ValidationTypes.REQUIRED]: true,\n    },\n    mainSectionImageUrl: {\n      [ValidationTypes.REQUIRED]: true,\n    },\n    ourStoryContent: {\n      [ValidationTypes.REQUIRED]: true,\n    },\n    ourStoryTitle: {\n      [ValidationTypes.REQUIRED]: true,\n    },\n    ourStoryVideoLink: {\n      [ValidationTypes.REQUIRED]: true,\n    }\n  };\n\n  const messages = {\n    mainSectionTitle: {\n      [ValidationTypes.REQUIRED]: message.Title,\n    },\n    mainSectionContent: {\n      [ValidationTypes.REQUIRED]: message.content,\n    },\n    mainSectionButtonText: {\n      [ValidationTypes.REQUIRED]: message.buttonText,\n    },\n    mainSectionImageUrl: {\n      [ValidationTypes.REQUIRED]: message.image,\n    },\n    ourStoryContent: {\n      [ValidationTypes.REQUIRED]: message.content\n    },\n    ourStoryTitle: {\n      [ValidationTypes.REQUIRED]: message.Title,\n    },\n    ourStoryVideoLink: {\n      [ValidationTypes.REQUIRED]: message.VideoURL,\n    }\n  };\n  const { isValid, errors } = Validator(data, validations, messages);\n\n  return {\n    isValid,\n    errors,\n  };\n};\n","export * from './Login';\nexport * from './ChangePassword';\nexport * from './CMS';\n","module.exports = __webpack_public_path__ + \"static/media/default_image.a36ecf55.jpg\";","import React from 'react';\nimport { OverlayTrigger } from 'react-bootstrap';\nimport { Tooltip } from 'react-bootstrap';\n\nexport interface ITooltipProps {\n  dataPlacement: string;\n  message: string;\n  children?: JSX.Element[] | JSX.Element;\n}\n\nconst TooltipComponent: React.FC<ITooltipProps> = props => {\n  const dataPlacement = props.dataPlacement ? props.dataPlacement : 'top';\n  return (\n    <OverlayTrigger\n      key={dataPlacement || 'top'}\n      placement={'top'}\n      overlay={<Tooltip id={`tooltip`}>{props.message}</Tooltip>}\n    >\n      {props.children}\n    </OverlayTrigger>\n  );\n};\n\nexport default TooltipComponent;\n","export const TooltipText: any = {\n  edit: 'Edit Details',\n  view: 'View Details',\n  delete: 'Delete',\n  proxyLogin: 'Login to organization',\n  video: 'Add links for vimeo videos',\n  audio: 'Add links for soundcloud audios',\n};\n","import React, { Component } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport { IRootState, IProxyLoginActionData } from '../../../interfaces';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { getOrganizationRequest, proxyLoginRequest } from '../../../actions';\nimport {\n  IOrganizationState,\n  IOrganizationProps,\n  IOrganizationData,\n} from '../../../interfaces/Organization';\nimport { ConfirmBox } from '../../../Helper';\nimport TooltipComponent from '../../components/ToolTipComponent';\nimport { TooltipText } from '../../common';\nimport { Form } from 'react-bootstrap';\n\nclass Organization extends Component<IOrganizationProps, IOrganizationState> {\n  constructor(props: IOrganizationProps) {\n    super(props);\n    this.state = {\n      // For Pagination\n      totalRecords: 0,\n      currentPage: 1,\n      pageLimit: 10,\n      pageNeighbours: 1,\n    };\n  }\n  componentDidMount = () => {\n    console.log('did mount calling');\n    this.props.getOrganization();\n  };\n  handleStatus = async (id: string, isActive: boolean) => {\n    const { value } = await ConfirmBox({\n      title: 'Are you sure?',\n      text: isActive\n        ? 'Do you want to activate this organization?'\n        : 'Do you want to deactivate this organization?',\n    });\n    if (!value) {\n      return;\n    } else {\n      // Api call\n    }\n  };\n  render() {\n    const { currentPage, pageLimit } = this.state;\n    let count = (currentPage - 1) * pageLimit + 1;\n    return (\n      <div>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>\n                <Form.Group className='col-sm-12'>\n                  <div className='checkbox'>\n                    <label>\n                      <input type='checkbox' name={'isHide'} value={'true'} />\n                      <span className='checkbox-material'>\n                        <span className='check' />\n                      </span>\n                      #\n                    </label>\n                  </div>\n                </Form.Group>\n              </th>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>email</th>\n              <th>Wildcard Domain</th>\n              <th>Status</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.organizationReducer &&\n            this.props.organizationReducer.organizationData &&\n            this.props.organizationReducer.organizationData.length ? (\n              this.props.organizationReducer.organizationData.map(\n                (organization: IOrganizationData, index: number) => {\n                  return (\n                    <tr key={organization._id}>\n                      <td>\n                        <Form.Group className='col-sm-12'>\n                          <div className='checkbox'>\n                            <label>\n                              <input\n                                type='checkbox'\n                                name={'isHide'}\n                                value={'true'}\n                                id={`user${index}`}\n                              />\n                              <span className='checkbox-material'>\n                                <span className='check' />\n                              </span>\n                              {count++}\n                            </label>\n                          </div>\n                        </Form.Group>\n                      </td>\n                      <td>{organization.firstName}</td>\n                      <td>{organization.lastName}</td>\n                      <td>{organization.email}</td>\n                      <td>{organization.wildCardDomain}</td>\n                      <td>\n                        <Button\n                          type='button'\n                          color={organization.isActive ? 'primary' : 'danger'}\n                          className='btn btn-sm'\n                          onClick={() =>\n                            this.handleStatus(\n                              organization && organization._id\n                                ? organization._id\n                                : '',\n                              !organization.isActive,\n                            )\n                          }\n                        >\n                          {organization.isActive ? 'Active' : 'Deactive'}\n                        </Button>\n                      </td>\n                      <td>\n                        <button type='button' className='btn btn-sm'>\n                          <i className='fa fa-eye' />\n                        </button>\n                        <TooltipComponent\n                          dataPlacement={'top'}\n                          message={TooltipText.proxyLogin}\n                          children={\n                            <button\n                              type='button'\n                              className='btn login-icon '\n                              onClick={() => {\n                                if (organization && organization._id) {\n                                  this.props.proxyLogin({\n                                    id: organization._id,\n                                  });\n                                }\n                              }}\n                            >\n                              <i className='icon-lock-open' />\n                            </button>\n                          }\n                        />\n                      </td>\n                    </tr>\n                  );\n                },\n              )\n            ) : (\n              <tr>\n                <td colSpan={10} className='text-center'>\n                  No Event found\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps: any = (state: IRootState) => ({\n  organizationReducer: state.OrganizationReducer,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    getOrganization: () => {\n      dispatch(getOrganizationRequest());\n    },\n    proxyLogin: (data: IProxyLoginActionData) => {\n      dispatch(proxyLoginRequest(data));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Organization);\n","import React, { Component } from 'react';\nimport { Form, InputGroup, Row, Col, Button } from 'react-bootstrap';\nimport EmailEditor from 'react-email-editor';\nimport { ITemplateState, IRootState } from '../../../interfaces';\nimport { Dispatch } from 'redux';\nimport { addTemplateRequest, viewTemplateRequest } from '../../../actions';\nimport { connect } from 'react-redux';\n\nclass AddTemplate extends Component<any, ITemplateState> {\n  editor: any;\n  constructor(props: any) {\n    super(props);\n    this.editor = null;\n    // '\" <!DOCTYPE HTML PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional //EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\"><head> <!--[if gte mso 9]> <xml> <o:OfficeDocumentSettings> <o:AllowPNG/> <o:PixelsPerInch>96</o:PixelsPerInch> </o:OfficeDocumentSettings> </xml> <![endif]--><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"x-apple-disable-message-reformatting\"> <!--[if !mso]><!--><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><!--<![endif]--><title></title><style type=\"text/css\">body{margin:0;padding:0}table,tr,td{vertical-align:top;border-collapse:collapse}p,ul{margin:0}.ie-container table, .mso-container table{table-layout:fixed}*{line-height:inherit}a[x-apple-data-detectors=true]{color:inherit !important;text-decoration:none !important}.ExternalClass, .ExternalClass p, .ExternalClass span, .ExternalClass font, .ExternalClass td, .ExternalClass div{line-height:100%}[owa] .email-row .email-col{display:table-cell;float:none !important;vertical-align:top}.ie-container .email-col-100, .ie-container .email-row, [owa] .email-col-100, [owa] .email-row{width:500px !important}.ie-container .email-col-17, [owa] .email-col-17{width:85px !important}.ie-container .email-col-25, [owa] .email-col-25{width:125px !important}.ie-container .email-col-33, [owa] .email-col-33{width:165px !important}.ie-container .email-col-50, [owa] .email-col-50{width:250px !important}.ie-container .email-col-67, [owa] .email-col-67{width:335px !important}@media only screen and (min-width: 520px){.email-row{width:500px !important}.email-row .email-col{vertical-align:top}.email-row .email-col-100{width:500px !important}.email-row .email-col-67{width:335px !important}.email-row .email-col-50{width:250px !important}.email-row .email-col-33{width:165px !important}.email-row .email-col-25{width:125px !important}.email-row .email-col-17{width:85px !important}}@media (max-width: 520px){.hide-mobile{display:none !important}.email-row-container{padding-left:0px !important;padding-right:0px !important}.email-row .email-col{min-width:320px !important;max-width:100% !important;display:block !important}.email-row{width:calc(100% - 40px) !important}.email-col{width:100% !important}.email-col>div{margin:0 auto}.no-stack .email-col{min-width:0 !important;display:table-cell !important}.no-stack .email-col-50{width:50% !important}.no-stack .email-col-33{width:33% !important}.no-stack .email-col-67{width:67% !important}.no-stack .email-col-25{width:25% !important}.no-stack .email-col-17{width:17% !important}}</style><!--[if mso]><style type=\"text/css\">ul li{list-style:disc inside;mso-special-format:bullet}</style><![endif]--></head><body class=\"clean-body\" style=\"margin: 0;padding: 0;-webkit-text-size-adjust: 100%;background-color: #e7e7e7\"> <!--[if IE]><div class=\"ie-container\"><![endif]--> <!--[if mso]><div class=\"mso-container\"><![endif]--><table class=\"nl-container\" style=\"border-collapse: collapse;table-layout: fixed;border-spacing: 0;mso-table-lspace: 0pt;mso-table-rspace: 0pt;vertical-align: top;min-width: 320px;Margin: 0 auto;background-color: #e7e7e7;width:100%\" cellpadding=\"0\" cellspacing=\"0\"><tbody><tr style=\"vertical-align: top\"><td style=\"word-break: break-word;border-collapse: collapse !important;vertical-align: top\"> <!--[if (mso)|(IE)]><table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\"><tr><td align=\"center\" style=\"background-color: #e7e7e7;\"><![endif]--><div class=\"email-row-container\" style=\"padding: 0px;background-color: transparent\"><div style=\"Margin: 0 auto;min-width: 320px;max-width: 500px;overflow-wrap: break-word;word-wrap: break-word;word-break: break-word;background-color: transparent;\" class=\"email-row\"><div style=\"border-collapse: collapse;display: table;width: 100%;background-color: transparent;\"> <!--[if (mso)|(IE)]><table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\"><tr><td style=\"padding: 0px;background-color: transparent;\" align=\"center\"><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"width:500px;\"><tr style=\"background-color: transparent;\"><![endif]--> <!--[if (mso)|(IE)]><td align=\"center\" width=\"500\" style=\"width: 500px;padding: 0px;border-top: 0px solid transparent;border-left: 0px solid transparent;border-right: 0px solid transparent;border-bottom: 0px solid transparent;\" valign=\"top\"><![endif]--><div class=\"email-col email-col-100\" style=\"max-width: 320px;min-width: 500px;display: table-cell;vertical-align: top;\"><div style=\"width: 100% !important;\"> <!--[if (!mso)&(!IE)]><!--><div style=\"padding: 0px;border-top: 0px solid transparent;border-left: 0px solid transparent;border-right: 0px solid transparent;border-bottom: 0px solid transparent;\"><!--<![endif]--><table id=\"u_content_text_1\" class=\"u_content_text\" style=\"font-family:arial,helvetica,sans-serif;\" role=\"presentation\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" border=\"0\"><tbody><tr><td style=\"overflow-wrap:break-word;word-break:break-word;padding:10px;font-family:arial,helvetica,sans-serif;\" align=\"left\"><div style=\"color: #000; line-height: 140%; text-align: left; word-wrap: break-word;\"> <span style=\"font-size: 14px; line-height: 19.6px;\">This is a new Text block. Change the text.</span></div></td></tr></tbody></table><!--[if (!mso)&(!IE)]><!--></div><!--<![endif]--></div></div> <!--[if (mso)|(IE)]></td><![endif]--> <!--[if (mso)|(IE)]></tr></table></td></tr></table><![endif]--></div></div></div><!--[if (mso)|(IE)]></td></tr></table><![endif]--></td></tr></tbody></table> <!--[if (mso)|(IE)]></div><![endif]--></body></html>';\n    this.state = {\n      name: '',\n      subject: '',\n      content: {\n        counters: { u_column: 1, u_row: 1, u_content_text: 1 },\n        body: {\n          rows: [\n            {\n              cells: [1],\n              columns: [\n                {\n                  contents: [\n                    {\n                      type: 'text',\n                      values: {\n                        containerPadding: '10px',\n                        _meta: {\n                          htmlID: 'u_content_text_1',\n                          htmlClassNames: 'u_content_text',\n                        },\n                        selectable: true,\n                        draggable: true,\n                        deletable: true,\n                        color: '#000',\n                        textAlign: 'left',\n                        lineHeight: '140%',\n                        text:\n                          '<span style=\"font-size: 14px; line-height: 19.6px;\">This is a new Text block. Change the text.</span>',\n                      },\n                    },\n                  ],\n                  values: {\n                    backgroundColor: '',\n                    padding: '0px',\n                    border: {},\n                    _meta: { htmlID: 'u_column_1', htmlClassNames: 'u_column' },\n                  },\n                },\n              ],\n              values: {\n                columns: false,\n                backgroundColor: '',\n                columnsBackgroundColor: '',\n                backgroundImage: {\n                  url: '',\n                  fullWidth: true,\n                  repeat: false,\n                  center: true,\n                  cover: false,\n                },\n                padding: '0px',\n                hideMobile: false,\n                noStackMobile: false,\n                _meta: { htmlID: 'u_row_1', htmlClassNames: 'u_row' },\n                selectable: true,\n                draggable: true,\n                deletable: true,\n              },\n            },\n          ],\n          values: {\n            backgroundColor: '#e7e7e7',\n            backgroundImage: {\n              url: '',\n              fullWidth: true,\n              repeat: false,\n              center: true,\n              cover: false,\n            },\n            contentWidth: '500px',\n            fontFamily: { label: 'Arial', value: 'arial,helvetica,sans-serif' },\n            _meta: { htmlID: 'u_body', htmlClassNames: 'u_body' },\n          },\n        },\n      },\n      isEditable: false,\n    };\n  }\n  componentDidMount = () => {\n    const { match } = this.props;\n    const { params } = match;\n    if (params && params.id) {\n      const { id } = params;\n      this.setState({\n        isEditable: true,\n      });\n      this.props.viewTemplate({ id });\n    }\n  };\n  componentDidUpdate = (prevProps: any) => {\n    const { templateReducer } = prevProps;\n    if (\n      templateReducer.isLoading !== this.props.templateReducer.isLoading &&\n      this.props.templateReducer.templateInfo\n    ) {\n      const { templateInfo } = this.props.templateReducer;\n      const { templateName, subject, designContent } = templateInfo;\n      const { isEditable } = this.state;\n      if (isEditable) {\n        this.setState({\n          name: templateName,\n          subject,\n          content: designContent,\n        });\n      }\n    }\n  };\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    this.setState({\n      ...this.state,\n      [name]: value,\n    });\n  };\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const { name, subject } = this.state;\n    await this.editor.exportHtml(async (data: any) => {\n      const { design, html } = data;\n      console.log('exportHtml', html, design);\n      const templateData: any = {\n        templateName: name,\n        subject,\n        htmlContent: html,\n        designContent: design,\n      };\n      this.setState({\n        content: design,\n      });\n      console.log(templateData);\n      this.props.addTemplate(templateData);\n      // const response = await new ApiHelper().FetchFromServer(\n      //   ApiRoutes.ADMIN_LOGIN.service,\n      //   ApiRoutes.ADMIN_LOGIN.url,\n      //   ApiRoutes.ADMIN_LOGIN.method,\n      //   ApiRoutes.ADMIN_LOGIN.authenticate,\n      //   undefined,\n      //   { email: html, password: design },\n      // );\n      // console.log(response);\n    });\n  };\n  onLoad = () => {\n    const { content } = this.state; /* DESIGN JSON GOES HERE */\n    if (!this.editor) return;\n    this.editor.loadDesign(content);\n  };\n  render() {\n    const { name, subject } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Group>\n          <Form.Label>\n            Template Name<span className={'mandatory'}>*</span>&nbsp;\n          </Form.Label>\n          <InputGroup>\n            <input\n              type={'text'}\n              name={'name'}\n              value={name}\n              className={'form-control'}\n              placeholder={'Enter Email Subject'}\n              onChange={this.handleChange}\n            />\n          </InputGroup>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>\n            Email Subject<span className={'mandatory'}>*</span>&nbsp;\n          </Form.Label>\n          <InputGroup>\n            <input\n              type={'text'}\n              name={'subject'}\n              value={subject}\n              className={'form-control'}\n              placeholder={'Enter Email Subject'}\n              onChange={this.handleChange}\n            />\n          </InputGroup>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>\n            Email Content<span className={'mandatory'}>*</span>&nbsp;\n          </Form.Label>\n          <EmailEditor\n            ref={editor => (this.editor = editor)}\n            onLoad={this.onLoad}\n          />\n        </Form.Group>\n        <Row>\n          <Col xs='6'>\n            <Button type={'submit'} className='px-4 btn-submit'>\n              Save\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps: any = (state: IRootState) => ({\n  templateReducer: state.TemplateReducer,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    addTemplate: (data: any) => {\n      dispatch(addTemplateRequest(data));\n    },\n    viewTemplate: (data: any) => {\n      dispatch(viewTemplateRequest(data));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AddTemplate);\n","import React, { Component } from 'react';\nimport { Table, Button, Card } from 'react-bootstrap';\nimport { IRootState } from '../../../interfaces';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\nimport { getTemplateRequest } from '../../../actions';\nimport { AppRoutes } from '../../../config';\nimport TooltipComponent from '../../components/ToolTipComponent';\nimport { TooltipText } from '../../common/TooltipText';\n\nclass EmailTemplates extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      // For Pagination\n      totalRecords: 0,\n      currentPage: 1,\n      pageNeighbours: 1,\n    };\n  }\n\n  componentDidMount = () => {\n    // this.handleQueryParams();\n    console.log('above did mount');\n    this.props.getTemplates();\n  };\n\n  componentDidUpdate = (prevProps: RouteComponentProps) => {\n    const { location } = prevProps;\n    if (location.search !== this.props.location.search) {\n      //   this.handleQueryParams();\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Card>\n          <Card.Header>\n            <h4>\n              <i className='fa fa-university' />\n              {/* <img src={organization} width=\"20px\"/> */}\n              &nbsp;<span className='align-middle'>Templates</span>\n            </h4>\n            <TooltipComponent\n              dataPlacement={'top'}\n              message={`Add New Organization`}\n              children={\n                <Button\n                  variant={'link'}\n                  className={'pull-right theme-btn add-btn'}\n                  id={'add-new-pm-tooltip'}\n                  onClick={() => {\n                    this.props.history.push(AppRoutes.ADD_TEMPLATE);\n                  }}\n                >\n                  <i className={'fa fa-plus'} />\n                  &nbsp; Add New Template\n                </Button>\n              }\n            />\n          </Card.Header>\n          <Card.Body className='pt-4'>\n            <Table hover responsive>\n              <thead className='thead-color'>\n                <tr>\n                  <th>#</th>\n                  <th>Template Name</th>\n                  <th>Subject</th>\n                  <th className='action-width'>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.props.templateReducer &&\n                this.props.templateReducer.isLoading ? (\n                  <tr>\n                    <td className={'table-loader'} colSpan={12}></td>\n                  </tr>\n                ) : (\n                  <>\n                    {this.props.templateReducer &&\n                    this.props.templateReducer.templateData &&\n                    this.props.templateReducer.templateData.length ? (\n                      this.props.templateReducer.templateData.map(\n                        (template: any, index: number) => {\n                          return (\n                            <tr key={index}>\n                              <td>{index + 1}</td>\n                              <td>{template.templateName}</td>\n                              <td>{template.subject}</td>\n                              <td className='overflow-hidden'>\n                                <div className='action-buttons'>\n                                  <TooltipComponent\n                                    dataPlacement={'top'}\n                                    message={TooltipText.edit}\n                                    children={\n                                      <button\n                                        type='button'\n                                        className='btn edit-icon '\n                                        onClick={() => {\n                                          if (template && template._id) {\n                                            this.props.history.push(\n                                              AppRoutes.EDIT_TEMPLATE.replace(\n                                                ':id',\n                                                template._id,\n                                              ),\n                                            );\n                                          }\n                                        }}\n                                      >\n                                        <i className='icon-note ' />\n                                      </button>\n                                    }\n                                  />\n                                </div>\n                              </td>\n                            </tr>\n                          );\n                        },\n                      )\n                    ) : (\n                      <tr>\n                        <td colSpan={10} className='text-center'>\n                          <div className='no-data-section'>\n                            <h4 className='mb-1'>\n                              Currently there are No Oraganization Added.{' '}\n                            </h4>\n                            <p>Please click above button to add new. </p>\n                          </div>\n                        </td>\n                      </tr>\n                    )}\n                  </>\n                )}\n              </tbody>\n            </Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps: any = (state: IRootState) => ({\n  templateReducer: state.TemplateReducer,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    getTemplates: () => {\n      dispatch(getTemplateRequest());\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(EmailTemplates);\n","import React, { Component } from 'react';\nimport { Button, Card, Col, Form, InputGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport { viewHomePageRequest, updateHomePageRequest } from '../../../actions';\nimport { IRootState, IAddHomePageProps, IAddHomePageState, IHomePageData } from '../../../interfaces';\nimport { ImageURL } from '../../../config/AppConfig';\nimport { AcceptedImageFormat } from '../../../config';\nimport { HomePageValidator } from '../../components/validator';\nimport defaultImage from '../../../assets/img/default_image.jpg';\n\nclass AddHomePage extends Component<IAddHomePageProps, IAddHomePageState> {\n  constructor(props: IAddHomePageProps) {\n    super(props);\n    this.state = {\n      mainSection: {\n        image: \"\",\n        imageUrl: \"\",\n        title: \"\",\n        content: \"\",\n        buttonText: \"\"\n      },\n      howItWorks: {\n        title: \"\",\n        section: [{\n          heading: \"\",\n          image: \"\",\n          title: \"\",\n          content: \"\",\n        }],\n        buttonText: \"\",\n      },\n      ourStory: {\n        heading: \"\",\n        title: \"\",\n        content: \"\",\n        videoLink: \"\"\n      },\n      why: {\n        heading: \"\",\n        section: [{\n          title: \"\", image: \"\",\n          imageUrl: \"\",\n          content: [{ text: \"\" }]\n        }]\n      },\n      errors: {\n        mainSectionTitle: '',\n        mainSectionContent: '',\n        mainSectionButtonText: '',\n        mainSectionImageUrl: '',\n        ourStoryTitle: '',\n        ourStoryContent: '',\n        ourStoryVideoLink: ''\n      },\n      searchValue: '',\n      isEditable: false,\n      id: '',\n    };\n  }\n  componentDidMount = () => {\n    this.props.viewHomePage()\n  };\n\n  componentDidUpdate = (prevProps: IAddHomePageProps) => {\n    const { homePageReducer } = this.props;\n    if (homePageReducer && homePageReducer.homePageInfo && prevProps &&\n      prevProps.homePageReducer && prevProps.homePageReducer.homePageInfo !== homePageReducer.homePageInfo) {\n      const { mainSection, howItWorks, ourStory, why } = homePageReducer.homePageInfo;\n      const { image } = mainSection;\n      const contentBlock = mainSection && mainSection.content ? htmlToDraft(mainSection.content) : '';\n      const ourContentBlock = ourStory && ourStory.content ? htmlToDraft(ourStory.content) : '';\n      const howContent = howItWorks && howItWorks.section.map((element: any) => {\n        const resp = htmlToDraft(element.content)\n        const howContentState = ContentState.createFromBlockArray(\n          resp.contentBlocks,\n        )\n        const howContentData = EditorState.createWithContent(howContentState);\n        return { ...element, content: howContentData }\n      });\n\n      if (contentBlock) {\n        const contentState = ContentState.createFromBlockArray(\n          contentBlock.contentBlocks\n        );\n        const mainSectioncontent = EditorState.createWithContent(contentState);\n        this.setState({\n          mainSection: { ...mainSection, imageUrl: image, content: mainSectioncontent },\n        })\n      }\n      if (howContent) {\n\n        this.setState({\n          howItWorks: {\n            ...howItWorks,\n            section: howContent\n          }\n        })\n      }\n\n      if (ourContentBlock) {\n        const ourContentState = ContentState.createFromBlockArray(\n          ourContentBlock.contentBlocks,\n        )\n        const ourContent = EditorState.createWithContent(ourContentState);\n        this.setState({\n          ourStory: { ...ourStory, content: ourContent }\n        })\n      }\n      const whySection: any = []\n      why && why.section.forEach((element: any) => {\n        console.log(element.image);\n        whySection.push({\n          ...element,\n          imageUrl: element.image,\n        })\n      });\n      this.setState({\n        why: {\n          ...why,\n          section: whySection\n        },\n      });\n    }\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { mainSection } = this.state\n    const { name, value } = event.target;\n    if (name === 'title') {\n      mainSection.title = value;\n    }\n    else {\n      mainSection.buttonText = value;\n    }\n    this.setState({\n      mainSection,\n    });\n  };\n\n  howItWorkHandleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, index: number, name: \"heading\" | \"title\" | \"content\") => {\n    const { howItWorks } = this.state\n    const { value } = event.target;\n    howItWorks.buttonText = value;\n    howItWorks.section[index][name] = value\n    this.setState({\n      howItWorks\n    });\n  }\n\n  owrStoryHandleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { ourStory } = this.state\n    const { name, value } = event.target;\n    if (name === \"title\") {\n      ourStory.title = value;\n    }\n    else {\n      ourStory.content = value;\n      ourStory.videoLink = value\n    }\n    this.setState({\n      ourStory\n    });\n  }\n\n  whyHandleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, index: number, name: \"title\") => {\n    const { why } = this.state\n    const { value } = event.target;\n    why.section[index][name] = value\n    this.setState({\n      why\n    });\n  }\n\n  whyHandleContentChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, index: number, ind: number, name: \"text\") => {\n    const { why } = this.state\n    const { value } = event.target;\n    why.section[index].content[ind][name] = value\n    this.setState({\n      why\n    });\n  }\n\n  onEditorStateChange: any = (content: any): void => {\n    this.setState({\n      mainSection: {\n        ...this.state.mainSection,\n        content,\n      },\n    });\n  };\n\n  onHowEditorStateChange = (content: any, index: number): void => {\n    const { howItWorks } = this.state\n    howItWorks.section[index].content = content\n    this.setState({\n      howItWorks: howItWorks\n    });\n  };\n\n  onOurEditorStateChange = (content: any): void => {\n    this.setState({\n      ourStory: {\n        ...this.state.ourStory,\n        content,\n      },\n    });\n  }\n\n  /**\n   * Upload Main Section Image\n   */\n  uploadImage = (e: React.ChangeEvent<HTMLInputElement | HTMLImageElement | any>) => {\n    if (AcceptedImageFormat.indexOf(e.target.files[0].type) === -1) {\n      console.log(\"IN IF\");\n\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          mainSectionImageUrl:\n            'Uploaded file is not a valid image. Only JPG, PNG and GIF files are allowed',\n        },\n      });\n      return;\n    }\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    console.log(\"file\", file);\n    reader.onloadend = () => {\n      this.setState({\n        mainSection: {\n          ...this.state.mainSection,\n          image: file,\n          imageUrl: reader.result,\n        }\n      });\n    };\n    reader.readAsDataURL(file);\n  };\n\n  /**\n   * Upload Why Section Image\n   */\n  uploadWhyImage = (e: React.ChangeEvent<HTMLInputElement | HTMLImageElement | any>, index: number) => {\n    const { why } = this.state;\n    const { section } = why\n    console.log(\"e.target.files[0]\", e.target.files[0]);\n\n    if (AcceptedImageFormat.indexOf(e.target.files[0].type) === -1) {\n      console.log(\"IN IF\");\n\n      this.setState({\n        /*   errors: {\n            ...this.state.errors,\n            mainSectionImage:\n              'Uploaded file is not a valid image. Only JPG, PNG and GIF files are allowed',\n          }, */\n      });\n      return;\n    }\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    console.log(\"file\", file);\n    reader.onloadend = () => {\n      section[index].image = file;\n      section[index].imageUrl = reader.result;\n      this.setState({\n        why: {\n          ...this.state.why,\n          section\n        }\n      });\n    };\n    reader.readAsDataURL(file);\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const {\n      mainSection,\n      howItWorks,\n      ourStory,\n      why,\n      id,\n    } = this.state;\n    console.log(\"mainSection.image\", mainSection.image);\n\n    const data = {\n      \"mainSectionContent\": mainSection && mainSection.content ? draftToHtml(convertToRaw(mainSection.content.getCurrentContent())) : '',\n      \"mainSectionImage\": mainSection.image,\n      \"mainSectionImageUrl\": mainSection.imageUrl,\n      \"mainSectionButtonText\": mainSection.buttonText,\n      \"mainSectionTitle\": mainSection.title,\n      \"howItWorksButtonText\": howItWorks.buttonText,\n      \"howItWorksSection\": howItWorks.section.map((element: any) => {\n        return {\n          ...element,\n          content: draftToHtml(convertToRaw(element.content.getCurrentContent()))\n        }\n      }),\n      \"ourStoryContent\": ourStory && ourStory.content ? draftToHtml(convertToRaw(ourStory.content.getCurrentContent()))\n        : '',\n      \"ourStoryTitle\": ourStory.title,\n      \"ourStoryVideoLink\": ourStory.videoLink,\n      \"whySection\": why.section.map((sect) => {\n        const sec = Object.assign({}, sect)\n        //  delete sec.image\n        delete sec.imageUrl\n        return sec\n      }),\n      \"whySectionImage\": why.section.map((sec) => {\n        console.log(\"sec\", sec);\n        return sec.image\n      }),\n      id,\n    };\n    console.log(\"++++++++++++++++++++++++++++\", data.whySectionImage);\n    let { isValid, errors } = HomePageValidator(data);\n    console.log(\"errors\", errors);\n\n    if (isValid) {\n      this.props.updateHomePage((data as any));\n    }\n    else {\n      this.setState({\n        errors,\n      });\n      return;\n    }\n  }\n\n\n  render() {\n    const { mainSection, howItWorks, ourStory, why, errors, isEditable } = this.state;\n    return (\n      <div className='cr-page px-3 min-height650 my-profile-section'>\n        <Card className=\"home-card\">\n          <Card.Header>\n            <h4>\n              <i className='icon-note' />\n              &nbsp;{!isEditable ? 'Add' : 'Edit'} Home Page\n            </h4>\n          </Card.Header>\n          <Card.Body>\n            <div >\n              <div className='col-md-12 '>\n                <Form onSubmit={this.handleSubmit} className='row'>\n                  <div className=\"col-md-12 \">\n                    <Card.Body className='row section-div'>\n                      <h4 className=\"col-sm-12 heading-title\">Main Banner:</h4>\n                      <div className='col-sm-6'>\n                        <Form.Group>\n                            <Form.Label className='floating-label '>\n                              Title\n                            </Form.Label>\n                          <InputGroup>\n                            <input\n                              type={'text'}\n                              name={'title'}\n                              value={mainSection && mainSection.title}\n                              className={'form-control floating-input'}\n                              placeholder={' '}\n                              onChange={this.handleChange}\n                            />\n                            {errors.mainSectionTitle ? (\n                              <div className={'text-danger error-text'}>\n                                {errors.mainSectionTitle}\n                              </div>\n                            ) : null}\n                          </InputGroup>\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label className='floating-label'>\n                              Button Text\n                            </Form.Label>\n                          <InputGroup>\n                            <input\n                              type={'text'}\n                              name={'buttonText'}\n                              value={mainSection && mainSection.buttonText ? mainSection.buttonText : ''}\n                              className={'form-control floating-input'}\n                              placeholder={' '}\n                              onChange={this.handleChange}\n                            />\n                            \n                            {errors.mainSectionButtonText ? (\n                              <div className={'text-danger error-text'}>\n                                {errors.mainSectionButtonText}\n                              </div>\n                            ) : null}\n\n                          </InputGroup>\n                        </Form.Group>\n\n                        <div className='fileinput-preview'>\n                          <img src={mainSection && mainSection.imageUrl ? mainSection.imageUrl.startsWith(\"data\") ? mainSection.imageUrl : ImageURL + mainSection.imageUrl : defaultImage}></img>\n                          <div className='file-upload'>\n                            <label\n                              htmlFor='gallery-photo-add'\n                              className='file-upload-label'\n                            >\n                              Choose Image\n                        </label>\n                            <input\n                              className='file-upload-input'\n                              type='file'\n                              accept='image/*'\n                              onChange={this.uploadImage}\n                              id='gallery-photo-add'\n                            />\n                          </div>\n                        </div>\n                        {errors.mainSectionImageUrl ? (\n                          <div className={'text-danger file-error-text'}>\n                            {errors.mainSectionImageUrl}\n                          </div>\n                        ) : null}\n                      </div>\n\n                      <div className='col-sm-6'>\n                        <div style={{ marginTop: '-10px' }}>\n                          <Form.Label className='simple-label mb-3'>\n                            Description\n                        </Form.Label>\n                          <Editor\n                            editorState={mainSection && mainSection.content ? mainSection.content : ''}\n                            wrapperClassName='demo-wrapper'\n                            editorClassName='demo-home-editor'\n                            toolbar={{\n                              options: [\n                                'inline',\n                                'blockType',\n                                'fontSize',\n                                'list',\n                                'textAlign',\n                                'link',\n                              ],\n                              inline: {\n                                options: ['bold', 'italic', 'underline'],\n                              },\n                              textAlign: { inDropdown: false },\n                              link: {\n                                inDropdown: false,\n                                linkCallback: (params: any) => ({\n                                  ...params,\n                                }),\n                              },\n                            }}\n                            onEditorStateChange={this.onEditorStateChange}\n                          />\n                        </div>\n                      </div>\n                      {errors.mainSectionContent ? (\n                        <div className={'text-danger error-text'}>\n                          {errors.mainSectionContent}\n                        </div>\n                      ) : null}\n                      {/* <div className='ml-auto'>\n                        <Button\n                          type={'submit'}\n                          variant='link'\n                          className=' btn-submit'\n                        >\n                          Update\n                        </Button>\n                      </div> */}\n                    </Card.Body>\n                  </div>\n                  <div className=\"col-md-12 \">\n                    <Card.Body className='row section-div'>\n                      <h4 className='col-md-12 heading-title'>How It Works:</h4>\n                      {\n                        howItWorks && howItWorks.section && howItWorks.section.map((section: any, index) => {\n                          return <>\n                            <div className='col-sm-6'>\n                              <Form.Group>\n                                <Form.Label>\n                                    Heading\n                                </Form.Label>\n                                <InputGroup>\n                                  <input\n                                    type={'text'}\n                                    name={'heading'}\n                                    value={section.heading}\n                                    className={'form-control floating-input'}\n                                    placeholder={' '}\n                                    onChange={(e: any) => this.howItWorkHandleChange(e, index, \"heading\")}\n                                  />\n                                </InputGroup>\n                              </Form.Group></div>\n                              <div className='col-sm-6'>\n                              <Form.Group>\n                              <Form.Label>\n                                    Title\n                              </Form.Label>\n                                <InputGroup>\n                                  <input\n                                    type={'text'}\n                                    name={'title'}\n                                    value={section.title}\n                                    className={'form-control floating-input'}\n                                    placeholder={' '}\n                                    onChange={(e: any) => this.howItWorkHandleChange(e, index, \"title\")}\n                                  />\n                                </InputGroup>\n                              </Form.Group></div>\n                              <div className=\"col-md-12\">\n                                <Form.Label className='simple-label mb-3'>\n                                  Description\n                           </Form.Label>\n                                <Editor\n                                  editorState={howItWorks && howItWorks.section[index].content}\n                                  wrapperClassName='demo-wrapper'\n                                  editorClassName='demo-home-editor'\n                                  toolbar={{\n                                    options: [\n                                      'inline',\n                                      'blockType',\n                                      'fontSize',\n                                      'list',\n                                      'textAlign',\n                                      'link',\n                                    ],\n                                    inline: {\n                                      options: ['bold', 'italic', 'underline'],\n                                    },\n\n                                    textAlign: { inDropdown: false },\n                                    link: {\n                                      inDropdown: false,\n                                      linkCallback: (params: any) => ({\n                                        ...params,\n                                      }),\n                                    },\n                                  }}\n                                  onEditorStateChange={(content) => this.onHowEditorStateChange(content, index)}\n                                />\n                              </div>\n                          </>\n                        })\n                      }\n                      {/* <div className='ml-auto'>\n                        <Button\n                          type={'submit'}\n                          variant='link'\n                          className=' btn-submit'\n                        >\n                          Update\n                        </Button>\n                      </div> */}\n                    </Card.Body>\n                  </div>\n\n\n                  <div className=\"col-md-12 \">\n                    <Card.Body className='row section-div'>\n                      <h4 className='col-md-12 heading-title'>Our Story:</h4>\n\n                      <div className='col-sm-6'>\n\n                        <Form.Group>\n                        <Form.Label className='floating-label '>\n                              Title\n                           </Form.Label>\n                          <InputGroup>\n                            <input\n                              type={'text'}\n                              name={'title'}\n                              value={ourStory && ourStory.title}\n                              className={'form-control floating-input'}\n                              placeholder={' '}\n                              onChange={this.owrStoryHandleChange}\n                            />\n                            \n                            {errors.ourStoryTitle ? (\n                              <div className={'text-danger error-text'}>\n                                {errors.ourStoryTitle}\n                              </div>\n                            ) : null}\n                          </InputGroup>\n                        </Form.Group>\n\n                        <Form.Group>\n                        <Form.Label className='floating-label '>\n                              Video URL\n                            </Form.Label>\n                          <InputGroup>\n                            <input\n                              type={'text'}\n                              name={'videoLink'}\n                              value={ourStory && ourStory.videoLink}\n                              className={'form-control floating-input'}\n                              placeholder={' '}\n                              onChange={this.owrStoryHandleChange}\n                            />\n                            \n                            {errors.ourStoryVideoLink ? (\n                              <div className={'text-danger error-text'}>\n                                {errors.ourStoryVideoLink}\n                              </div>\n                            ) : null}\n                          </InputGroup>\n                        </Form.Group>\n\n                      </div>\n                      <div className='col-sm-6'>\n                        <Form.Label className='simple-label mb-3'>\n                          Description\n                        </Form.Label>\n                        <Editor\n                          editorState={ourStory && ourStory.content}\n                          wrapperClassName='demo-wrapper'\n                          editorClassName='demo-home-editor'\n                          toolbar={{\n                            options: [\n                              'inline',\n                              'blockType',\n                              'fontSize',\n                              'list',\n                              'textAlign',\n                              'link',\n                            ],\n                            inline: {\n                              options: ['bold', 'italic', 'underline'],\n                            },\n\n                            textAlign: { inDropdown: false },\n                            link: {\n                              inDropdown: false,\n                              linkCallback: (params: any) => ({\n                                ...params,\n                              }),\n                            },\n                          }}\n                          onEditorStateChange={this.onOurEditorStateChange}\n                        />\n                      </div>\n                      {/* <div className='ml-auto'>\n                        <Button\n                          type={'submit'}\n                          variant='link'\n                          className=' btn-submit'\n                        >\n                          Update\n                        </Button>\n                      </div> */}\n                    </Card.Body>\n                  </div>\n\n\n                  <div className=\"col-md-12 \">\n                    <Card.Body className='row section-div'>\n                      <h4 className='col-md-12  heading-title'>Why Dr Polly?</h4>\n                      {\n                        why && why.section && why.section.map((section: any, index: number) => {\n                          return <>\n                            {/* <h5 className='col-md-12 mb-4 mt-n3'>Section {index + 1}:</h5> */}\n\n                            <div className='col-sm-6'>\n                              <Form.Group>\n                              <Form.Label className='floating-label '>\n                                    Title\n                             </Form.Label>\n                                <InputGroup>\n                                  <input\n                                    type={'text'}\n                                    name={'title'}\n                                    value={section.title}\n                                    className={'form-control floating-input'}\n                                    placeholder={' '}\n                                    onChange={(e: any) => this.whyHandleChange(e, index, \"title\")}\n                                  />\n                                  \n                                </InputGroup>\n                              </Form.Group>\n\n                              <div className='fileinput-preview'>\n                                <img src={section.imageUrl ? section.imageUrl.startsWith(\"data\") ? section.imageUrl : ImageURL + section.imageUrl : defaultImage}></img>\n                                <div className='file-upload'>\n                                  <label\n                                    htmlFor={`gallery-photo-add-why-${index}`}\n                                    className='file-upload-label'\n                                  >\n                                    Choose Image\n                           </label>\n                                  <input\n                                    className='file-upload-input'\n                                    type='file'\n                                    accept='image/*'\n                                    onChange={(e) => this.uploadWhyImage(e, index)}\n                                    id={`gallery-photo-add-why-${index}`}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n\n                            <div className='col-sm-6'>\n                              {section && section.content.map((content: any, ind: number) => {\n                                return <>\n                                  <Form.Group >\n                                  <Form.Label className='floating-label '>\n                                        Subheading {ind + 1}\n                                      </Form.Label>\n                                    <InputGroup>\n                                      <input\n                                        type={'text'}\n                                        name={'text'}\n                                        value={content.text}\n                                        className={'form-control floating-input'}\n                                        placeholder={' '}\n                                        onChange={(e: any) => this.whyHandleContentChange(e, index, ind, \"text\")}\n                                      />\n                                      \n                                    </InputGroup>\n                                  </Form.Group>\n                                </>\n                              })}\n                            </div>\n                          </>\n                        })\n                      }\n                      {/*  <div className='ml-auto'>\n                        <Button\n                          type={'submit'}\n                          variant='link'\n                          className=' btn-submit'\n                        >\n                          Update\n                        </Button>\n                      </div> */}\n                    </Card.Body>\n                  </div>\n\n                  <div className='clearfix' />\n                  <Col xs='12'>\n                    <div className='d-flex align-items-center'>\n                      <div className='ml-auto'>\n                        <Button\n                          type={'submit'}\n                          variant='link'\n                          className=' btn-submit'\n                        >\n                          Update\n                        </Button>\n                      </div>\n                    </div>\n                  </Col>\n                </Form>\n              </div>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps: any = (state: IRootState) => ({\n  homePageReducer: state.homePageReducer,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    viewHomePage: () => {\n      dispatch(viewHomePageRequest());\n    },\n    updateHomePage: (data: IHomePageData) => {\n      dispatch(updateHomePageRequest(data));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AddHomePage);\n","import React from 'react';\nimport { AppRoutes } from '../config';\nimport Organization from '../app/containers/Organization';\n// import EmailTemplates from '../app/containers/EmailTemplates';\nimport AddTemplate from '../app/containers/EmailTemplates/AddTemplate';\nimport EmailTemplates from '../app/containers/EmailTemplates';\nimport HomePage from '../app/containers/CMS/HomePage';\n\nconst Home = React.lazy(() => import('../app/containers/Home'));\nconst Login = React.lazy(() => import('../app/containers/Auth'));\nconst MyProfile = React.lazy(() => import('../app/containers/MyProfile'));\n\nconst routes = [\n  { path: AppRoutes.MAIN, exact: true, name: 'Home' },\n  {\n    path: AppRoutes.HOME,\n    name: 'Dashboard',\n    component: Home,\n    exact: true,\n  },\n  {\n    path: AppRoutes.LOGIN,\n    name: '',\n    component: Login,\n    exact: true,\n  },\n  {\n    path: AppRoutes.MY_PROFILE,\n    name: 'Profile',\n    component: MyProfile,\n    exact: true,\n  },\n  {\n    path: AppRoutes.ORGANIZATION,\n    name: 'Organization',\n    component: Organization,\n    exact: true,\n  },\n  {\n    path: AppRoutes.EMAILTEMPLATE,\n    name: 'Email Template',\n    component: EmailTemplates,\n    exact: true,\n  },\n  {\n    path: AppRoutes.ADD_TEMPLATE,\n    name: 'Add Template',\n    component: AddTemplate,\n    exact: true,\n  },\n  {\n    path: AppRoutes.EDIT_TEMPLATE,\n    name: 'Update Template',\n    component: AddTemplate,\n    exact: true,\n  },\n  {\n    path: AppRoutes.ADD_HOME_PAGE,\n    name: 'Home Page',\n    component: HomePage,\n    exact: true\n  },\n];\n\nexport default routes;\n","import { AppRoutes } from './config';\n\nexport default {\n  items: [\n    {\n      name: 'Dashboard',\n      url: AppRoutes.HOME,\n      icon: 'fa fa-dashboard',\n    },\n    {\n      name: 'Users',\n      icon: 'fa fa-users',\n      url: AppRoutes.ORGANIZATION,\n    },\n    {\n      name: 'Email Templates',\n      icon: 'fa fa-envelope',\n      url: AppRoutes.EMAILTEMPLATE,\n    },\n    {\n      name: 'CMS',\n      icon: 'icon-grid',\n      url: AppRoutes.ADD_HOME_PAGE,\n      children: [\n        {\n          name: \"Home Page\",\n          url: AppRoutes.ADD_HOME_PAGE,\n          icon: \"icon-home\",\n        },\n      ],\n    },\n  ],\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport './Loader.scss';\n\nconst Loader = () => {\n  return (\n    <div className={classNames('loader-block')}>\n      <div className={classNames('loader')}>\n        <svg className={classNames('circular-loader')} viewBox='25 25 50 50'>\n          <circle\n            className={classNames('loader-path')}\n            cx='50'\n            cy='50'\n            r='20'\n            fill='none'\n            stroke='#4caa60'\n            strokeWidth='2.5'\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { Component, Suspense } from 'react';\nimport { Route, Switch, Redirect, RouteComponentProps } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport {\n  IDefaultLayoutProps,\n  IDefaultLayoutState,\n  IRootState,\n  IredirectPath,\n} from '../../../interfaces';\nimport { AppRoutes } from '../../../config/AppRoutes';\nimport routes from '../../../routes/routes';\n// sidebar nav config\nimport navigation from '../../../_nav';\nimport Loader from '../../components/Loader/Loader';\nimport {\n  AppBreadcrumb,\n  AppFooter,\n  AppHeader,\n  AppSidebar,\n  AppSidebarFooter,\n  AppSidebarForm,\n  AppSidebarHeader,\n  AppSidebarMinimizer,\n  AppSidebarNav,\n} from '@coreui/react';\nimport { profileInfoRequest, redirectTo } from '../../../actions';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nconst DefaultFooter = React.lazy(() => import('./DefaultFooter'));\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader'));\n\nclass DefaultLayout extends Component<\n  IDefaultLayoutProps,\n  IDefaultLayoutState\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      isAuthenticated: true,\n      userDetails: {},\n    };\n  }\n\n  componentDidMount() {\n    console.log('gggggggggggggggggggggggggggg');\n    console.log(localStorage.getItem('token'));\n    if (!localStorage.getItem('token')) {\n      console.log('ggggggggggggggggg');\n      this.props.redirectTo({ path: AppRoutes.LOGIN });\n    } else {\n      console.log('fdfgjdfjgdskfj');\n      this.props.profileInfo();\n    }\n  }\n\n  componentDidUpdate = async (prevProps: RouteComponentProps) => {\n    const { location } = this.props;\n    const { pathname } = location;\n    const { profileInfoReducer } = this.props;\n    if (\n      prevProps.location.pathname !== pathname &&\n      profileInfoReducer &&\n      localStorage.getItem('token')\n    ) {\n      this.props.profileInfo();\n    }\n  };\n\n  render() {\n    return (\n      <div className='app'>\n        <AppHeader fixed>\n          <Suspense fallback={<Loader />}>\n            <DefaultHeader {...this.props} />\n          </Suspense>\n        </AppHeader>\n        <div className='app-body'>\n          <AppSidebar fixed display='lg'>\n            <AppSidebarHeader />\n            <AppSidebarForm />\n            <Suspense fallback={<Loader />}>\n              <AppSidebarNav navConfig={navigation} {...this.props} isOpen />\n            </Suspense>\n            <AppSidebarFooter />\n            <AppSidebarMinimizer />\n          </AppSidebar>\n          <main className='main'>\n            <AppBreadcrumb appRoutes={routes} />\n            <Container fluid>\n              <Suspense fallback={<Loader />}>\n                <Switch>\n                  {routes.map((route, idx) => {\n                    return route.component ? (\n                      <Route\n                        key={idx}\n                        path={route.path}\n                        exact={route.exact}\n                        component={route.component}\n                      />\n                    ) : null;\n                  })}\n                  <Redirect from={AppRoutes.MAIN} to={AppRoutes.HOME} />\n                </Switch>\n              </Suspense>\n            </Container>\n          </main>\n        </div>\n        <AppFooter>\n          <Suspense fallback={<Loader />}>\n            <DefaultFooter />\n          </Suspense>\n        </AppFooter>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps: any = (state: IRootState) => ({\n  loginReducer: state.loginReducer,\n  profileInfoReducer: state.profileInfoReducer,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    profileInfo: () => {\n      dispatch(profileInfoRequest());\n    },\n    redirectTo: (data: IredirectPath) => {\n      dispatch(redirectTo(data));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DefaultLayout);\n"],"sourceRoot":""}